{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/FormComponent/FormComponent.jsx","webpack:///./components/Header/Header.jsx","webpack:///./components/HomePage/HomePage.jsx","webpack:///./components/ImageUploader/ImageUploader.jsx","webpack:///./components/Modal/MyModal.jsx","webpack:///./components/Profile/ProfilePage.jsx","webpack:///./components/head.jsx","webpack:///./pages/LinkNavWithLayout.jsx","webpack:///./pages/confirmation.jsx","webpack:///./pages/dashboard.jsx","webpack:///./pages/forgotPassword.jsx","webpack:///./pages/home.jsx","webpack:///./pages/index.jsx","webpack:///./pages/login.jsx","webpack:///./pages/profile.jsx","webpack:///./pages/register.jsx","webpack:///./pages/updatePassword.jsx","webpack:///./store/reducers/ui/index.js","webpack:///./store/reducers/users/index.js","webpack:///./utils/index.js","webpack:///external \"axios\"","webpack:///external \"indicative/sanitizer\"","webpack:///external \"indicative/validator\"","webpack:///external \"next/head\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"react-router-dom\"","webpack:///external \"redux\"","webpack:///external \"semantic-ui-react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport {\n  Loader,\n  Dimmer,\n  Transition,\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment\n} from 'semantic-ui-react';\n\nimport axios from 'axios';\n\nimport {\n  logInUser,\n  userHasBeenVerified,\n  userHasNotBeenVerified,\n  resetUserAcoountVerified\n} from '../../store/reducers/users/index';\n\nimport { Link } from 'react-router-dom';\nimport { validateInputs } from '../../utils/index';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nfunction FormComponent({\n  formType,\n  match,\n  history,\n  logInUser,\n  accountVerified,\n  userHasBeenVerified,\n  userHasNotBeenVerified,\n  resetUserAcoountVerified\n}) {\n  var Forms = {\n    Confirmation: [isConfirmationForm],\n    ForgotPassword: [isForgotPasswordForm, forgotPasswordSubmit, isGenericUseEffect],\n    Login: [isLoginForm, loginSubmit, isGenericUseEffect],\n    Registration: [isRegisterForm, registerSubmit, isGenericUseEffect],\n    UpdatePassword: [isUpdatePasswordForm, updatePasswordSubmit, isGenericUseEffect]\n  };\n\n  var [duration, setDuration] = useState(500);\n  var [username, setUsername] = useState('');\n  var [usernameFeedback, setUsernameFeedback] = useState('');\n  var [usernameError, setUsernameError] = useState(false);\n  var [userNameDup, setUserNameDup] = useState(false);\n  var [password, setPassword] = useState('');\n  var [passwordFeedback, setPasswordFeedback] = useState('');\n  var [passwordError, setPasswordError] = useState(false);\n  var [password_confirmation, setPasswordConfirmation] = useState('');\n  var [passwordConfirmationError, setPasswordConfirmationError] = useState(false);\n  var [passwordConfirmationFeedback, setPasswordConfirmationFeedback] = useState('');\n  var [formSuccess, setFormSuccess] = useState(false);\n  var [formError, setFormError] = useState(false);\n  var [disableButton, setDisableButton] = useState(true);\n  var [isLoading, setIsLoading] = useState(false);\n  var [responseMessage, setResponseMessage] = useState({});\n  var [tokenExpired, setTokenExpired] = useState(false);\n  var [responseCodeSuccess, setResponseCodeSuccess] = useState(false);\n  var [error, setError] = useState(false);\n\n  function isConfirmationForm() {\n    useEffect(() => {\n      axios\n        .get(`http://localhost:8016/users/confirmation/${match.params.token}`)\n        .then(response => {\n          if (response.status === 200) {\n            setError(false);\n            setResponseMessage(response.data.msg);\n            // setTimeout(() => {\n            //   userHasBeenVerified();\n            // }, 1000);\n          }\n        })\n        .catch(function(error) {\n          if (error.response.status === 404) {\n            // Token not in database\n            resetUserAcoountVerified();\n            setResponseMessage(error.response.data.msg);\n            setError(true);\n          }\n          if (error.response.status === 400) {\n            userHasBeenVerified();\n            setResponseMessage(error.response.data.msg);\n            setError(true);\n          }\n        });\n    }, []);\n\n    const isNull = value => typeof value === 'object' && !value;\n    return (\n      <div className=\"login-form\">\n        {error === false ? (\n          <Transition unmountOnHide={true} animation=\"scale\" duration={duration}>\n            <Message success header={responseMessage[0]} />\n          </Transition>\n        ) : (\n          ''\n        )}\n\n        {accountVerified === true && error === true ? (\n          <Transition unmountOnHide={true} animation=\"scale\" duration={duration}>\n            <Message error header={responseMessage[0]} />\n          </Transition>\n        ) : (\n          ''\n        )}\n        {isNull(accountVerified) && error === true ? (\n          <Transition unmountOnHide={true} animation=\"scale\" duration={duration}>\n            <Message error header={responseMessage[0]} />\n          </Transition>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  function isForgotPasswordForm() {\n    return (\n      <div className=\"login-form\">\n        {' '}\n        {}\n        <style>\n          {`body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`}{' '}\n        </style>\n        <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"green\" textAlign=\"center\">\n              Forgot yee password?\n            </Header>\n            <Message color=\"olive\">\n              Not a problem. Just enter your email address below. If it's registered with\n              Hillfinder, we'll send you a link to reset your password.{' '}\n            </Message>\n\n            <Form\n              size=\"large\"\n              onSubmit={e => handleSubmit(e, formType)}\n              error={formError}\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address, e.g. joe@schmoe.com\"\n                  name=\"username\"\n                  value={username}\n                  onChange={e => handleChange(e)}\n                  error={usernameError}\n                />\n\n                <Transition visible={usernameError} animation=\"scale\" duration={duration}>\n                  <Message error content={usernameFeedback} />\n                </Transition>\n\n                <Button color=\"green\" fluid size=\"large\" disabled={disableButton}>\n                  Yes, send a link\n                </Button>\n\n                <Transition\n                  visible={formError}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      error\n                      centered=\"true\"\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={formSuccess}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      success\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n              </Segment>\n            </Form>\n\n            {formError ? (\n              <Transition visible={formError} animation=\"scale\" duration={1000}>\n                <Message>\n                  <Link to=\"/register\">Register</Link>{' '}\n                </Message>\n              </Transition>\n            ) : null}\n          </Grid.Column>{' '}\n        </Grid>{' '}\n      </div>\n    );\n  }\n\n  function isLoginForm() {\n    return (\n      <div className=\"login-form\">\n        {' '}\n        {}\n        <style>\n          {`body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`}{' '}\n        </style>\n        <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"green\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n\n            <Form\n              size=\"large\"\n              onSubmit={e => handleSubmit(e, formType)}\n              error={formError}\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address, e.g. joe@schmoe.com\"\n                  name=\"username\"\n                  value={username}\n                  onChange={handleChange}\n                />\n                <Transition visible={usernameError} animation=\"scale\" duration={duration}>\n                  <Message error content={usernameFeedback} />\n                </Transition>\n                <Form.Input\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={e => handleChange(e)}\n                />\n                <Transition visible={passwordError} animation=\"scale\" duration={duration}>\n                  <Message error content={passwordFeedback} />\n                </Transition>\n                <Button color=\"green\" fluid size=\"large\" disabled={disableButton}>\n                  Log-in\n                </Button>\n                <br />\n                <Link to=\"/forgot_password\">Forgot password?</Link>\n\n                <Transition\n                  visible={accountVerified === false}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      warning\n                      color=\"yellow\"\n                      centered=\"true\"\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={formError}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      error\n                      centered=\"true\"\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={formSuccess}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      success\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n              </Segment>\n            </Form>\n            {formError ? (\n              <Transition visible={formError} animation=\"scale\" duration={1000}>\n                {isLoading ? (\n                  <Dimmer active inverted>\n                    <Loader />\n                  </Dimmer>\n                ) : (\n                  <Message>\n                    <Link to=\"/register\">Register</Link>{' '}\n                  </Message>\n                )}\n              </Transition>\n            ) : null}\n          </Grid.Column>{' '}\n        </Grid>{' '}\n      </div>\n    );\n  }\n\n  function isRegisterForm() {\n    return (\n      <div className=\"login-form\">\n        {' '}\n        {}\n        <style>\n          {`body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`}{' '}\n        </style>\n        <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"green\" textAlign=\"center\">\n              Register for an account\n              {/* {isLoggedIn ? `Register for an account` : ` Log-in to your account`} */}\n            </Header>\n\n            <Form\n              size=\"large\"\n              onSubmit={e => handleSubmit(e, formType)}\n              error={userNameDup || formError}\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address, e.g. joe@schmoe.com\"\n                  name=\"username\"\n                  value={username}\n                  onChange={e => handleChange(e)}\n                  error={usernameError}\n                />\n\n                <Transition visible={usernameError} animation=\"scale\" duration={duration}>\n                  <Message error content={usernameFeedback} />\n                </Transition>\n\n                <Form.Input\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={e => handleChange(e)}\n                  error={passwordError}\n                />\n\n                <Transition visible={passwordError} animation=\"scale\" duration={duration}>\n                  <Message error content={passwordFeedback} />\n                </Transition>\n\n                <Button color=\"green\" fluid size=\"large\" disabled={disableButton}>\n                  Register\n                </Button>\n\n                <Transition\n                  visible={userNameDup || formError}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      error\n                      centered=\"true\"\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={formSuccess}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      success\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n              </Segment>\n            </Form>\n\n            {formSuccess ? (\n              <Transition visible={formSuccess} animation=\"scale\" duration={1000}>\n                <Message>\n                  <Link to=\"/login\">Login</Link>{' '}\n                </Message>\n              </Transition>\n            ) : null}\n          </Grid.Column>{' '}\n        </Grid>{' '}\n      </div>\n    );\n  }\n\n  function isUpdatePasswordForm() {\n    console.log('disableButton ', disableButton);\n    return (\n      <div className=\"login-form\">\n        {' '}\n        {}\n        <style>\n          {`body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`}{' '}\n        </style>\n        <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"green\" textAlign=\"center\">\n              Update your password\n            </Header>\n            <Message color=\"olive\">\n              Create a new password for your account and sign in. For your security,\n              choose a password you haven't used before\n            </Message>\n\n            <Form\n              size=\"large\"\n              onSubmit={e => handleSubmit(e, formType)}\n              error={formError}\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"New password, 6 - 16 characters\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={e => handleChange(e)}\n                  error={passwordError}\n                />\n                <Transition visible={passwordError} animation=\"scale\" duration={duration}>\n                  <Message error content={passwordFeedback} />\n                </Transition>\n\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Confirm new password\"\n                  name=\"password_confirmation\"\n                  type=\"password\"\n                  value={password_confirmation}\n                  onChange={e => handleChange(e)}\n                  error={passwordConfirmationError}\n                />\n\n                <Transition\n                  visible={passwordConfirmationError}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  <Message error content={passwordConfirmationFeedback} />\n                </Transition>\n\n                <Button color=\"green\" fluid size=\"large\" disabled={disableButton}>\n                  Update password\n                </Button>\n\n                <Transition\n                  visible={tokenExpired}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message error header={responseMessage[0]} />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={tokenExpired}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Link to=\"/forgot_password\">reset password link?</Link>\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={responseCodeSuccess}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      success\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n              </Segment>\n            </Form>\n          </Grid.Column>{' '}\n        </Grid>{' '}\n      </div>\n    );\n  }\n\n  function forgotPasswordSubmit() {\n    axios\n      .post('http://localhost:8016/users/forgot_password', {\n        username: username\n      })\n      .then(response => {\n        if (response.status === 200) {\n          setUsername('');\n          setResponseMessage(response.data.msg);\n          setFormError(false);\n          setFormSuccess(true);\n          setIsLoading(false);\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n        if (error.response) {\n          if (error.response.status === 404) {\n            setResponseMessage(error.response.data.msg);\n            setFormError(true);\n            setFormSuccess(false);\n            setIsLoading(false);\n          }\n\n          console.log('error.response.data', error.response.data);\n          console.log('error.response.headers', error.response.headers);\n        }\n      });\n  }\n\n  function loginSubmit() {\n    axios\n      .post('http://localhost:8016/users/login', {\n        username: username,\n        password: password\n      })\n      .then(response => {\n        console.log('response', response);\n        if (response.status === 200) {\n          setTimeout(() => {\n            logInUser();\n            history.push('/profile');\n          }, 5000);\n\n          setUsername('');\n          setPassword('');\n          setFormError(false);\n          setFormSuccess(true);\n          setIsLoading(false);\n          setResponseMessage(response.data.msg);\n          userHasBeenVerified();\n        }\n      })\n      .catch(function(error) {\n        if (error.response) {\n          if (error.response.status === 401) {\n            userHasNotBeenVerified();\n            setUsername('');\n            setPassword('');\n            setFormError(false);\n            setFormSuccess(false);\n            setIsLoading(false);\n            setResponseMessage(error.response.data.msg);\n          }\n          if (error.response.status === 404) {\n            resetUserAcoountVerified();\n            setUsername('');\n            setPassword('');\n            setFormError(true);\n            setFormSuccess(false);\n            setIsLoading(false);\n            setResponseMessage(error.response.data.msg);\n          }\n          console.log('error.response.data', error.response.data);\n          console.log('error.response.headers', error.response.headers);\n        }\n      });\n  }\n\n  function registerSubmit() {\n    axios\n      .post('http://localhost:8016/users/registration', {\n        username: username,\n        password: password\n      })\n      .then(response => {\n        console.log('response', response);\n        if (response.status === 200) {\n          setTimeout(() => {\n            history.push('/login');\n          }, 5000);\n          setUsername('');\n          setPassword('');\n          setResponseMessage(response.data.msg);\n          setUserNameDup(false);\n          setFormError(false);\n          setFormSuccess(true);\n          setIsLoading(false);\n        }\n      })\n      .catch(function(error) {\n        console.log('error ', error);\n        if (error.response.status === 409) {\n          setUserNameDup(true);\n          setResponseMessage(error.response.data.msg);\n\n          setFormError(true);\n          setIsLoading(false);\n\n          console.log('userNameDup in error ', userNameDup);\n          console.log('formError in error', formError);\n          console.log('Error in registration', error);\n        }\n      });\n  }\n\n  function updatePasswordSubmit() {\n    var { token } = match.params;\n    axios\n      .post(`http://localhost:8016/users/reset_password/${token}`, {\n        password: password\n      })\n      .then(response => {\n        console.log('response', response);\n        if (response.status === 200) {\n          setPassword('');\n          setPasswordConfirmation('');\n          setFormError(false);\n          setFormSuccess(true);\n          setIsLoading(false);\n          setResponseCodeSuccess(true);\n          setResponseMessage(response.data.msg);\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            setFormError(true);\n            setFormSuccess(false);\n            setIsLoading(false);\n            setTokenExpired(true);\n            setResponseMessage(error.response.data.msg);\n          }\n        }\n      });\n  }\n\n  var isGenericUseEffect = useEffect(() => {\n    validateInputs(\n      formType,\n      username,\n      setUsernameError,\n      setUsernameFeedback,\n      password,\n      password_confirmation,\n      setPasswordConfirmationError,\n      setPasswordConfirmationFeedback,\n      setPasswordError,\n      setPasswordFeedback,\n      setDisableButton\n    );\n  }, [formType, accountVerified, username, password, usernameError, passwordError]);\n\n  function handleChange(e) {\n    console.log('e ', e);\n    e.persist();\n    setFormError(false);\n    setDisableButton(true);\n    console.log('resetUserAcoountVerified fired!');\n    resetUserAcoountVerified();\n    console.log('resetUserAcoountVerified fired!');\n    setUserNameDup(false);\n\n    if (e.target.name === 'username') {\n      console.log('username', e.target.name);\n      setUsername(e.target.value);\n    }\n\n    if (e.target.name === 'password') {\n      console.log('password', e.target.name);\n      setPassword(e.target.value);\n    }\n\n    if (e.target.name === 'password_confirmation') {\n      console.log('password_confirmation', e.target.name);\n      setPasswordConfirmation(e.target.value);\n    }\n  }\n\n  function handleSubmit(event, formType) {\n    event.preventDefault();\n    return Forms[formType][1]();\n  }\n  return Forms[formType][0]();\n}\n\nfunction mapStateToProps(state) {\n  const { users } = state;\n  const { accountVerified, isLoggedIn } = users;\n\n  return { accountVerified, isLoggedIn };\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    { logInUser, userHasBeenVerified, userHasNotBeenVerified, resetUserAcoountVerified },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormComponent);\n","import PropTypes from 'prop-types'\nimport { Header } from 'semantic-ui-react'\n\nconst MyHeader = ({ mobile, content, textAlign}) => (\n  <Header\n   as='h1'\n   content={content}\n   textAlign={textAlign}\n   inverted\n   style={{\n    fontSize: mobile ? '.5em' : '2.5em',\n    fontWeight: 'normal',\n    padding: mobile ? '0' : '0',\n    margin: mobile ? '1em 0 0 0' : '0',\n   }}\n  />\n)\n\nMyHeader.propTypes = {\n mobile: PropTypes.bool,\n H1Header: PropTypes.string,\n H2Header: PropTypes.string,\n}\n\n\nexport default MyHeader\n","import { Button, Container, Grid, Header, List, Segment } from 'semantic-ui-react';\n\nimport MyHeader from '../Header/Header.jsx';\n\nconst HomepageLayout = () => (\n  <>\n    <Segment\n      inverted\n      textAlign=\"center\"\n      style={{ minHeight: 'auto', padding: '4.5em 0em 5em' }}\n      vertical\n    >\n      <MyHeader content=\"Welcome to Hillfinder!\" textAlign={'center'} />\n      <p style={{ fontSize: '1.33em' }}>\n        An app on the decline! <br />\n        er about finding declines... Register!\n      </p>\n    </Segment>\n\n    <Segment style={{ padding: '8em 0em' }} vertical>\n      <Container text>\n        <Header as=\"h3\" style={{ fontSize: '2em' }}>\n          \"Is it an app to find a hill, to eventually build a hobbit home in a shire\"?\n        </Header>\n        <p style={{ fontSize: '1.33em' }}>\n          \"No. Essentially Hillfinder is a directions app, except all endpoints of your\n          journey try to be on a lower position in elevation than where you started from\".\n        </p>\n        <Button as=\"a\" size=\"large\">\n          Read More\n        </Button>\n      </Container>\n    </Segment>\n    <Segment inverted vertical style={{ padding: '5em 0em' }}>\n      <Container>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content=\"About\" />\n              <List link inverted>\n                <List.Item as=\"a\">Contact Us</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content=\"Services\" />\n              <List link inverted>\n                <List.Item as=\"a\">Banana Pre-Order</List.Item>\n                <List.Item as=\"a\">DNA FAQ</List.Item>\n                <List.Item as=\"a\">How To Access</List.Item>\n                <List.Item as=\"a\">Favorite X-Men</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={7}>\n              <Header as=\"h4\" inverted>\n                Footer Header\n              </Header>\n              <p>\n                Extra space for a call to action inside the footer that could help\n                re-engage users.\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Segment>\n  </>\n);\n\nexport default HomepageLayout;\n","import React, { PureComponent } from 'react';\n\nimport { Button, Card, Icon, Image, Grid, Input, Segment, Form } from 'semantic-ui-react'\n\nimport ImageModal from '../Modal/MyModal.jsx'\nimport axios from 'axios';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { loadAvatar, errorLoading } from '../../store/reducers/users/index'\nimport { avatarModalStateOn } from '../../store/reducers/ui/index'\n\nclass ImageUploader extends PureComponent {\n constructor(props) {\n  super(props);\n\n  this.state = {\n   userAvatar : this.props.userAvatar\n  }\n\n  this.uploadImage = this.uploadImage.bind(this);\n }\n\n fileInputRef = React.createRef();\n\n\n setDefaultImage() {\n  var defaultImage = '../../static/profile-avatars/assets/default-img.jpg';\n  this.loadAvatarImage(defaultImage)\n }\n\n loadAvatarImage(img) {\n  var { loadAvatar } = this.props;\n  loadAvatar(img)\n }\n\n fileChange = (e) => {\n  this.uploadImage(e, \"multer\");\n }\n\n uploadImage(e, method) {\n  e.stopPropagation();\n\n  const { avatarModalStateOn, errorLoading } = this.props\n\n  if (method === \"multer\") {\n\n   let imageFormObj = new FormData();\n\n   imageFormObj.append(\"imageName\", \"multer-image-\" + Date.now());\n   imageFormObj.append(\"imageData\", e.target.files[0]);\n\n   this.loadAvatarImage(window.URL.createObjectURL(e.target.files[0]))\n\n   var config = { headers: { 'content-type': 'multipart/form-data' } }\n   axios.post(`http://localhost:8016/images/uploadmulter`, imageFormObj, config)\n    .then((data) => {\n     if (data.data.success) {\n      console.log(\"data \", data);\n      avatarModalStateOn();\n     }\n    })\n    .catch((err) => {\n     if (err.response.status === 500) {\n      console.log(err.response.status);\n      avatarModalStateOn();\n      this.setDefaultImage()\n      errorLoading();\n     }\n    });\n  }\n }\n\n render() {\n\n  var { userAvatar, avatarModalActive, error } = this.props;\n\n  console.log(\"avatarModalActive \", avatarModalActive);\n\n  var ImageLoaded;\n    if (avatarModalActive) {\n      ImageLoaded = <ImageModal\n        key=\"AlertModal\"\n        isAlertModal={avatarModalActive}\n        affirmativeUsed=\"OK!\"\n        message=\"Your image has been uploaded succesfully\"\n     />\n    } else if (avatarModalActive && error){\n     ImageLoaded =  <ImageModal\n      key=\"AlertModal\"\n      isAlertModal={avatarModalActive}\n      affirmativeUsed=\"OK!\"\n      message=\"There was an error uploading your image, file size was to big!\"\n     />\n    }\n\n  return <>\n      <Segment>\n        <Card fluid>\n         <Image wrapped ui={false} src={userAvatar || this.setDefaultImage()} alt=\"upload-image\" />\n          <Segment>\n           <Form encType=\"multipart/form-data\">\n            <Form.Field>\n             <Button\n              content=\"Edit your Avatar!\"\n              labelPosition=\"left\"\n              icon=\"file\"\n              onClick={() => this.fileInputRef.current.click()}\n             />\n             <input\n              ref={this.fileInputRef}\n              type=\"file\"\n              name=\"avatar\"\n              hidden\n              onChange={this.fileChange}\n             />\n            </Form.Field>\n           </Form>\n          </Segment>\n          <Card.Content>\n\n           <Card.Header>Charly</Card.Header>\n           <Card.Meta>\n            <span className='date'>Joined in 2015</span>\n           </Card.Meta>\n           <Card.Description>\n            Charly\n           </Card.Description>\n           </Card.Content>\n           <Card.Content extra>\n           <a>\n            <Icon name='user' />\n            22 Friends\n           </a>\n          </Card.Content>\n       </Card>\n     </Segment>\n   {ImageLoaded}\n\n  </>;\n }\n}\n\nfunction mapStateToProps(state) {\n const { ui, users } = state\n const { userAvatar, error } = users\n const { avatarModalActive } = ui\n\n return { userAvatar, avatarModalActive, error }\n}\n\nconst mapDispatchToProps = dispatch =>\n bindActionCreators({ loadAvatar, errorLoading, avatarModalStateOn }, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUploader)\n","import React, { Component } from 'react'\nimport { Button, Modal } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { logOutUser  } from '../../store/reducers/users/index'\nimport { modalStateOn, modalStateOff  } from '../../store/reducers/ui/index'\n\n\nclass MyModal extends Component {\n\n close = () => {\n  const { modalStateOff } = this.props\n  modalStateOff();\n }\n\n logOutUser = () => {\n  const { logOutUser } = this.props\n  logOutUser()\n }\n\n render() {\n  const { modalActive, isAlertModal } = this.props\n\n   return (\n    <>\n      <Modal dimmer={'blurring'} centered={true} size={'mini'} open={modalActive} onClose={this.close}>\n        <Modal.Header>\n         <p>{this.props.message}</p>\n        </Modal.Header>\n        <Modal.Actions>\n         {this.props.isAlertModal ?\n         <Button\n          color='black'\n          onClick={this.close}\n          content={this.props.affirmativeUsed}\n         />\n         :\n        <>\n         <Button\n           color='black'\n           onClick={this.close}\n          >\n           No\n          </Button>\n          <Button\n           positive\n           icon='checkmark'\n           labelPosition='right'\n           content={this.props.affirmativeUsed}\n           onClick={() => { this.close(); this.logOutUser() }}\n          />\n        </>\n         }\n        </Modal.Actions>\n      </Modal>\n    </>\n   )\n }\n}\n\nMyModal.propTypes = {\n message: PropTypes.string,\n affirmativeUsed: PropTypes.string\n}\n\nfunction mapStateToProps(state) {\n const { ui } = state\n const { modalActive } = ui\n\n return { modalActive }\n}\nconst mapDispatchToProps = dispatch =>\n bindActionCreators({ logOutUser, modalStateOn, modalStateOff }, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyModal)\n","import {\n  Button,\n  Card,\n  Feed,\n  Icon,\n  Image,\n  Segment,\n  Grid,\n  Divider,\n  Container,\n  Header\n} from 'semantic-ui-react';\n\nimport MyHeader from '../Header/Header.jsx';\nimport ImageUploader from '../ImageUploader/ImageUploader.jsx';\nimport React, { useState } from 'react';\n\nimport { connect } from 'react-redux';\n\nconst style = {\n  h1: {\n    marginTop: '3em'\n  },\n  h2: {\n    margin: '4em 0em 2em'\n  },\n  h3: {\n    marginTop: '1em',\n    padding: '0'\n  },\n  last: {\n    marginBottom: '300px'\n  }\n};\n\nconst ProfilePage = ({ history, isMobileFromSSR, ...props }) => {\n  var { userAvatar } = props;\n  return (\n    <>\n      {console.log('Profile Page!! ', props)}\n      <Grid container columns={1} relaxed stackable>\n        <Grid.Column>\n          <MyHeader as=\"h2\" content=\"Foo\" textAlign=\"left\" />\n        </Grid.Column>\n      </Grid>\n\n      <Grid container columns={2} divided relaxed stackable>\n        <Grid.Column>\n          <Segment>\n            <Card fluid>\n              <Image src=\"static/profile-avatars/charly_desktop.jpg\" wrapped ui={false} />\n              <ImageUploader userAvatar={userAvatar} history={history} />\n              <Card.Content>\n                <Card.Header>Charly</Card.Header>\n                <Card.Meta>\n                  <span className=\"date\">Joined in 2015</span>\n                </Card.Meta>\n                <Card.Description>Charly</Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <a>\n                  <Icon name=\"user\" />\n                  22 Friends\n                </a>\n              </Card.Content>\n            </Card>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column>\n          <Segment>\n            <Card fluid>\n              <Card.Content>\n                <Card.Header>Recent Activity</Card.Header>\n              </Card.Content>\n              <Card.Content>\n                <Feed>\n                  <Feed.Event>\n                    <Feed.Label image=\"/images/avatar/small/jenny.jpg\" />\n                    <Feed.Content>\n                      <Feed.Date content=\"1 day ago\" />\n                      <Feed.Summary>\n                        You added <a>Jenny Hess</a> to your <a>coworker</a> group.\n                      </Feed.Summary>\n                    </Feed.Content>\n                  </Feed.Event>\n\n                  <Feed.Event>\n                    <Feed.Label image=\"/images/avatar/small/molly.png\" />\n                    <Feed.Content>\n                      <Feed.Date content=\"3 days ago\" />\n                      <Feed.Summary>\n                        You added <a>Molly Malone</a> as a friend.\n                      </Feed.Summary>\n                    </Feed.Content>\n                  </Feed.Event>\n\n                  <Feed.Event>\n                    <Feed.Label image=\"/images/avatar/small/elliot.jpg\" />\n                    <Feed.Content>\n                      <Feed.Date content=\"4 days ago\" />\n                      <Feed.Summary>\n                        You added <a>Elliot Baker</a> to your <a>musicians</a> group.\n                      </Feed.Summary>\n                    </Feed.Content>\n                  </Feed.Event>\n                </Feed>\n              </Card.Content>\n            </Card>\n          </Segment>\n\n          <Segment>\n            <Feed>\n              <Feed.Event>\n                <Feed.Label>\n                  <img src=\"/images/avatar/small/elliot.jpg\" />\n                </Feed.Label>\n                <Feed.Content>\n                  <Feed.Summary>\n                    <Feed.User>Elliot Fu</Feed.User> added you as a friend\n                    <Feed.Date>1 Hour Ago</Feed.Date>\n                  </Feed.Summary>\n                  <Feed.Meta>\n                    <Feed.Like>\n                      <Icon name=\"like\" />4 Likes\n                    </Feed.Like>\n                  </Feed.Meta>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image=\"/images/avatar/small/helen.jpg\" />\n                <Feed.Content>\n                  <Feed.Summary>\n                    <a>Helen Troy</a> added <a>2 new illustrations</a>\n                    <Feed.Date>4 days ago</Feed.Date>\n                  </Feed.Summary>\n                  <Feed.Extra images>\n                    <a>\n                      <img src=\"/images/wireframe/image.png\" />\n                    </a>\n                    <a>\n                      <img src=\"/images/wireframe/image.png\" />\n                    </a>\n                  </Feed.Extra>\n                  <Feed.Meta>\n                    <Feed.Like>\n                      <Icon name=\"like\" />1 Like\n                    </Feed.Like>\n                  </Feed.Meta>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image=\"/images/avatar/small/jenny.jpg\" />\n                <Feed.Content>\n                  <Feed.Summary\n                    date=\"2 Days Ago\"\n                    user=\"Jenny Hess\"\n                    content=\"add you as a friend\"\n                  />\n                  <Feed.Meta>\n                    <Feed.Like>\n                      <Icon name=\"like\" />8 Likes\n                    </Feed.Like>\n                  </Feed.Meta>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image=\"/images/avatar/small/joe.jpg\" />\n                <Feed.Content>\n                  <Feed.Summary>\n                    <a>Joe Henderson</a> posted on his page\n                    <Feed.Date>3 days ago</Feed.Date>\n                  </Feed.Summary>\n                  <Feed.Extra text>\n                    Ours is a life of constant reruns. We're always circling back to where\n                    we'd we started, then starting all over again. Even if we don't run\n                    extra laps that day, we surely will come back for more of the same\n                    another day soon.\n                  </Feed.Extra>\n                  <Feed.Meta>\n                    <Feed.Like>\n                      <Icon name=\"like\" />5 Likes\n                    </Feed.Like>\n                  </Feed.Meta>\n                </Feed.Content>\n              </Feed.Event>\n\n              <Feed.Event>\n                <Feed.Label image=\"/images/avatar/small/justen.jpg\" />\n                <Feed.Content>\n                  <Feed.Summary>\n                    <a>Justen Kitsune</a> added <a>2 new photos</a> of you\n                    <Feed.Date>4 days ago</Feed.Date>\n                  </Feed.Summary>\n                  <Feed.Extra images>\n                    <a>\n                      <img src=\"/images/wireframe/image.png\" />\n                    </a>\n                    <a>\n                      <img src=\"/images/wireframe/image.png\" />\n                    </a>\n                  </Feed.Extra>\n                  <Feed.Meta>\n                    <Feed.Like>\n                      <Icon name=\"like\" />\n                      41 Likes\n                    </Feed.Like>\n                  </Feed.Meta>\n                </Feed.Content>\n              </Feed.Event>\n            </Feed>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n\n      <Divider\n        as=\"h4\"\n        className=\"header\"\n        horizontal\n        style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n      >\n        <a href=\"#\">Case Studies</a>\n      </Divider>\n\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Container text>\n          <Header as=\"h3\" style={{ fontSize: '2em' }}>\n            Breaking The Grid, Grabs Your Attention\n          </Header>\n          <p style={{ fontSize: '1.33em' }}>\n            Instead of focusing on content creation and hard work, we have learned how to\n            master the art of doing nothing by providing massive amounts of whitespace and\n            generic content that can seem massive, monolithic and worth your attention.\n          </p>\n          <Button as=\"a\" size=\"large\">\n            Read More\n          </Button>\n        </Container>\n      </Segment>\n      <Segment inverted vertical style={{ padding: '5em 0em' }} />\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  const { users } = state;\n  const { userAvatar } = users;\n\n  return { userAvatar };\n}\n\nexport default connect(mapStateToProps)(ProfilePage);\n","import React from 'react'\nimport NextHead from 'next/head'\nimport { string } from 'prop-types'\n\nconst defaultDescription = ''\nconst defaultOGURL = ''\nconst defaultOGImage = ''\nconst Head = props => (\n <NextHead>\n  <meta charSet='UTF-8' />\n  <title>{props.title || ''}</title>\n  <meta\n   name='description'\n   content={props.description || defaultDescription}\n  />\n  <meta name='viewport' content='width=device-width, initial-scale=1' />\n  <link rel='icon' sizes='192x192' href='/static/touch-icon.png' />\n  <link rel='apple-touch-icon' href='/static/touch-icon.png' />\n  <link rel='mask-icon' href='/static/favicon-mask.svg' color='#49B882' />\n  <link rel='icon' href='/static/favicon.ico' />\n  <link rel='icon' href='/static/styles.css' />\n\n  <meta property='og:url' content={props.url || defaultOGURL} />\n  <meta property='og:title' content={props.title || ''} />\n  <meta\n   property='og:description'\n   content={props.description || defaultDescription}\n  />\n  <meta name='twitter:site' content={props.url || defaultOGURL} />\n  <meta name='twitter:card' content='summary_large_image' />\n  <meta name='twitter:image' content={props.ogImage || defaultOGImage} />\n  <meta property='og:image' content={props.ogImage || defaultOGImage} />\n  <meta property='og:image:width' content='1200' />\n  <meta property='og:image:height' content='630' />\n </NextHead>\n)\n\nHead.propTypes = {\n title: string,\n description: string,\n url: string,\n ogImage: string\n}\n\nexport default Head\n","import React, { Component, createRef } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport Modal from '../components/Modal/MyModal.jsx';\nimport {\n  Container,\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  Sidebar,\n  Icon,\n  Button\n} from 'semantic-ui-react';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { modalStateOn, modalStateOff } from '../store/reducers/ui/index';\nimport { loadAvatar } from '../store/reducers/users/index';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined';\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nconst logOutMenuItemHelper = (\n  isMobile,\n  isLoggedIn,\n  history,\n  modalActive,\n  nav,\n  NavLink,\n  modalStateOn,\n  modalStateOff,\n  handleSidebarHide\n) => {\n  function mobilelogOutMenuItemHelper(\n    history,\n    modalActive,\n    nav,\n    NavLink,\n    modalStateOn,\n    handleSidebarHide\n  ) {\n    if (nav.name === 'Log in') {\n      console.log('mobile nav.name ', nav.name);\n\n      return (\n        <React.Fragment key={'modalForMobile'}>\n          {modalActive && (\n            <Modal\n              isAlertModal={false}\n              history={history}\n              affirmativeUsed=\"Yes\"\n              message=\" Are you sure you want to log out of your account?\"\n              modalActive={modalActive}\n            />\n          )}\n          <Menu.Item\n            key={'modalForMobile'}\n            name=\"Log out\"\n            onClick={event => {\n              modalStateOn();\n              handleSidebarHide();\n            }}\n          >\n            Log Out\n          </Menu.Item>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <Menu.Item\n          exact\n          key={nav.name}\n          as={NavLink}\n          to={nav.path}\n          name={nav.name}\n          onClick={() => {\n            handleSidebarHide();\n          }}\n        />\n      );\n    }\n  }\n\n  function desktoplogOutMenuItemHelper(\n    history,\n    modalActive,\n    nav,\n    NavLink,\n    modalStateOn,\n    modalStateOff\n  ) {\n    if (nav.name === 'Log in') {\n      return (\n        <React.Fragment key={'modalForDesktop'}>\n          {modalActive && (\n            <Modal\n              isAlertModal={false}\n              history={history}\n              affirmativeUsed=\"Yes\"\n              message=\"Are you sure you want to log out of your account?\"\n              modalActive={modalActive}\n            />\n          )}\n          <Menu.Item\n            key={'modalForDesktop'}\n            name=\"Log out\"\n            onClick={event => {\n              modalStateOn();\n            }}\n          >\n            Log Out\n          </Menu.Item>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <Menu.Item exact key={nav.name} as={NavLink} to={nav.path} name={nav.name} />\n      );\n    }\n  }\n\n  if (isMobile && isLoggedIn) {\n    return mobilelogOutMenuItemHelper(\n      history,\n      modalActive,\n      nav,\n      NavLink,\n      modalStateOn,\n      modalStateOff,\n      handleSidebarHide\n    );\n  }\n  return desktoplogOutMenuItemHelper(\n    history,\n    modalActive,\n    nav,\n    NavLink,\n    modalStateOn,\n    modalStateOff\n  );\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n\n  render() {\n    const { fixed } = this.state;\n    const {\n      history,\n      data,\n      children,\n      isLoggedIn,\n      modalActive,\n      modalStateOn,\n      modalStateOff\n    } = this.props;\n    // console.log(\"this.props desktop in LinkNAV \", this.props);\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 'auto', padding: '0' }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? 'top' : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size=\"large\"\n            >\n              {/* {console.log(\"isLoggedIn in desktop homecomponent \", isLoggedIn)} */}\n              {isLoggedIn\n                ? data\n                    .filter(function(nav) {\n                      return nav.name !== 'Register';\n                    })\n                    .map(nav => {\n                      return logOutMenuItemHelper(\n                        false,\n                        isLoggedIn,\n                        history,\n                        modalActive,\n                        nav,\n                        NavLink,\n                        modalStateOn,\n                        modalStateOff\n                      );\n                    })\n                : data\n                    .filter(function(nav) {\n                      return nav.name != 'Profile' && nav.name != 'Dashboard';\n                    })\n                    .map(nav => {\n                      return (\n                        <Menu.Item\n                          exact\n                          key={nav.path}\n                          as={NavLink}\n                          to={nav.path}\n                          name={nav.name}\n                        />\n                      );\n                    })}\n            </Menu>\n          </Segment>\n        </Visibility>\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const {\n      children,\n      history,\n      data,\n      isLoggedIn,\n      modalActive,\n      modalStateOn,\n      modalStateOff\n    } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          inverted\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          {isLoggedIn\n            ? data\n                .filter(function(nav) {\n                  return nav.name !== 'Register';\n                })\n                .map(nav => {\n                  return logOutMenuItemHelper(\n                    false,\n                    isLoggedIn,\n                    history,\n                    modalActive,\n                    nav,\n                    NavLink,\n                    modalStateOn,\n                    modalStateOff,\n                    this.handleSidebarHide\n                  );\n                })\n            : data\n                .filter(function(nav) {\n                  return nav.name != 'Profile' && nav.name != 'Dashboard';\n                })\n                .map(nav => {\n                  return (\n                    <Menu.Item\n                      exact\n                      key={nav.name}\n                      as={NavLink}\n                      to={nav.path}\n                      name={nav.name}\n                      onClick={this.handleSidebarHide}\n                    />\n                  );\n                })}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 'auto', padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n                <Menu.Item position=\"right\">\n                  <Button inverted>\n                    {isLoggedIn ? (\n                      <Link to=\"/\">Log out</Link>\n                    ) : (\n                      <Link to=\"/login\">Log in</Link>\n                    )}\n                  </Button>\n                  {!isLoggedIn ? (\n                    <Button inverted style={{ marginLeft: '0.5em' }}>\n                      <Link to=\"/register\">\n                        <span>Register!</span>\n                      </Link>\n                    </Button>\n                  ) : null}\n                </Menu.Item>\n              </Menu>\n            </Container>\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nconst LinkNavWithLayout = ({\n  children,\n  history,\n  data,\n  userAvatar,\n  modalActive,\n  modalStateOn,\n  modalStateOff,\n  isLoggedIn\n}) => (\n  <React.Fragment>\n    <DesktopContainer\n      history={history}\n      data={data}\n      userAvatar={userAvatar}\n      modalActive={modalActive}\n      modalStateOn={modalStateOn}\n      modalStateOff={modalStateOff}\n      isLoggedIn={isLoggedIn}\n    >\n      {children}\n    </DesktopContainer>\n    <MobileContainer\n      history={history}\n      data={data}\n      userAvatar={userAvatar}\n      modalActive={modalActive}\n      modalStateOn={modalStateOn}\n      modalStateOff={modalStateOff}\n      isLoggedIn={isLoggedIn}\n    >\n      {children}\n    </MobileContainer>\n  </React.Fragment>\n);\n\nfunction mapStateToProps(state) {\n  const { ui, users } = state;\n  const { isLoggedIn, userAvatar } = users;\n  const { modalActive } = ui;\n\n  return { isLoggedIn, userAvatar, modalActive };\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ modalStateOn, modalStateOff, loadAvatar }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LinkNavWithLayout);\n","import 'semantic-ui-css/semantic.min.css';\nimport ConfirmationPage from '../components/FormComponent/FormComponent.jsx';\nimport { withRouter } from 'react-router-dom';\n\nconst Confirmation = props => (\n  <>\n    <ConfirmationPage formType=\"Confirmation\" {...props} />\n  </>\n);\n\nexport default withRouter(Confirmation);\n","\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { logOutUser } from '../store/reducers/users/index'\nimport { withRouter } from \"react-router-dom\";\n\nlet Dashboard;\n\nDashboard = ({ isLoggedIn, logOutUser }) => (\n <>\n <h1>Dashboard</h1>\n </>\n);\n\n\n\nfunction mapStateToProps(state) {\n  const { users } = state\n  const { isLoggedIn } = users\n return { isLoggedIn }\n}\nconst mapDispatchToProps = dispatch =>\n bindActionCreators({ logOutUser }, dispatch)\n\nexport default withRouter(\n connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n)\n","import 'semantic-ui-css/semantic.min.css';\nimport ForgotPasswordForm from '../components/FormComponent/FormComponent.jsx';\nimport { withRouter } from 'react-router-dom';\n\nconst ForgotPassword = props => (\n  <>\n    <ForgotPasswordForm formType=\"ForgotPassword\" {...props} />\n  </>\n);\n\nexport default withRouter(ForgotPassword);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Head from '../components/head';\nimport HomePage from '../components/HomePage/HomePage.jsx';\nimport 'semantic-ui-css/semantic.min.css';\nimport '../styles/styles.scss';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <>\n        <Head title=\"Home\" />\n        <HomePage />\n      </>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logInUser, logOutUser } from '../store/reducers/users/index';\nimport { bindActionCreators } from 'redux';\n\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\n\nimport LinkNavWithLayout from './LinkNavWithLayout';\nimport Index from './home';\nimport Profile from './profile';\nimport Dashboard from './dashboard';\nimport ForgotPassword from './forgotPassword';\nimport UpdatePassword from './updatePassword';\nimport Login from './login';\nimport Confirmation from './confirmation';\nimport { modalStateOn, modalStateOff } from '../store/reducers/ui/index';\n\nimport Register from './register';\n\nclass App extends Component {\n  static getInitialProps({ store, accountVerified, isLoggedIn, logInUser, logOutUser }) {\n    console.log('store', store);\n\n    return { store, accountVerified, isLoggedIn, logInUser, logOutUser };\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { isLoggedIn, accountVerified } = this.props;\n    console.log('accountVerified ', accountVerified);\n\n    console.log('this.props ', this.props);\n\n    let navBars = [\n      { name: 'Home', path: '/' },\n      { name: 'Profile', path: '/profile' },\n      { name: 'Dashboard', path: '/dashboard' },\n      { name: 'Log in', path: '/login' },\n      { name: 'Register', path: '/register' }\n    ];\n\n    function PrivateRoute({ children, ...rest }) {\n      return (\n        <Route\n          {...rest}\n          render={({ location }) =>\n            isLoggedIn && accountVerified ? (\n              { ...children }\n            ) : (\n              <Redirect\n                to={{\n                  pathname: '/',\n                  state: { from: location }\n                }}\n              />\n            )\n          }\n        />\n      );\n    }\n\n    return (\n      <>\n        <Switch>\n          <Route\n            path=\"/\"\n            isLoggedIn={isLoggedIn}\n            exact\n            render={props => (\n              <LinkNavWithLayout {...props} data={navBars}>\n                <Index />\n              </LinkNavWithLayout>\n            )}\n          />\n\n          <PrivateRoute path=\"/profile\" isLoggedIn={isLoggedIn}>\n            <LinkNavWithLayout data={navBars}>\n              <Profile user />\n            </LinkNavWithLayout>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/dashboard\" isLoggedIn={isLoggedIn}>\n            <LinkNavWithLayout data={navBars}>\n              <Dashboard />\n            </LinkNavWithLayout>\n          </PrivateRoute>\n\n          <Route\n            path=\"/login\"\n            render={props => <Login accountVerified={accountVerified} {...props} />}\n          />\n\n          <Route\n            path=\"/forgot_password\"\n            render={props => <ForgotPassword {...props} />}\n          />\n\n          <PrivateRoute path=\"/update_password/:token\" component={UpdatePassword} />\n\n          <PrivateRoute\n            path=\"/confirmed/:token\"\n            accountVerified={accountVerified}\n            component={Confirmation}\n          />\n\n          <Route path=\"/register\" render={props => <Register {...props} />} />\n\n          <Route\n            component={({ location }) => (\n              <h1>\n                Sorry but the page{' '}\n                <p style={{ fontWeight: 'strong' }}>{location.pathname.substring(1)} </p>{' '}\n                Page, Could Not be found\n              </h1>\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { ui, users } = state;\n  const { isLoggedIn, userAvatar, accountVerified } = users;\n  const { modalActive } = ui;\n  return { isLoggedIn, accountVerified, userAvatar, modalActive };\n}\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ modalStateOn, modalStateOff, logInUser, logOutUser }, dispatch);\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","import 'semantic-ui-css/semantic.min.css';\nimport LoginForm from '../components/FormComponent/FormComponent.jsx';\nimport { withRouter } from 'react-router-dom';\n\nconst Login = props => (\n  <>\n    <LoginForm formType=\"Login\" {...props} />\n  </>\n);\n\nexport default withRouter(Login);\n","import 'semantic-ui-css/semantic.min.css'\nimport ProfilePage from '../components/Profile/ProfilePage.jsx'\nimport { withRouter } from \"react-router-dom\";\n\nconst Profile = (props) => (<>\n <ProfilePage {...props} />\n</>)\n\nexport default withRouter(Profile)\n\n\n","import 'semantic-ui-css/semantic.min.css';\nimport RegisterForm from '../components/FormComponent/FormComponent.jsx';\nimport '../components/Register/Register.css';\nimport { withRouter } from 'react-router-dom';\n\nconst Register = props => (\n  <>\n    <RegisterForm formType=\"Registration\" {...props} />\n  </>\n);\n\nexport default withRouter(Register);\n","import 'semantic-ui-css/semantic.min.css';\nimport UpdatePasswordForm from '../components/FormComponent/FormComponent.jsx';\nimport { withRouter } from 'react-router-dom';\n\nconst UpdatePassword = props => (\n  <>\n    <UpdatePasswordForm formType=\"UpdatePassword\" {...props} />\n  </>\n);\n\nexport default withRouter(UpdatePassword);\n","/* initial state */\nexport var uiStartState = { modalActive: false, avatarModalActive: false, }\n\n/* action types */\nexport const actionTypes = {\n  MODAL_ACTIVE: 'MODAL_ACTIVE',\n  MODAL_INACTIVE: 'MODAL_INACTIVE',\n  AVATAR_MODAL_ACTIVE: 'AVATAR_MODAL_ACTIVE',\n  AVATAR_MODAL_INACTIVE: 'AVATAR_MODAL_INACTIVE',\n}\n\n/* reducer(s) */\nexport default function ui(state = uiStartState, action) {\n  switch (action.type) {\n\n    case actionTypes.MODAL_ACTIVE:\n      return Object.assign({}, state, { modalActive: true });\n\n    case actionTypes.MODAL_INACTIVE:\n      return Object.assign({}, state, { modalActive: false });\n\n    case actionTypes.AVATAR_MODAL_ACTIVE:\n      return Object.assign({}, state, { avatarModalActive: true });\n\n    case actionTypes.AVATAR_MODAL_INACTIVE:\n      return Object.assign({}, state, { avatarModalActive: false });\n\n    default:\n      return state\n  }\n};\n\n/* actions */\nexport const modalStateOn = () => {\n  return { type: actionTypes.MODAL_ACTIVE }\n}\n\nexport const modalStateOff = () => {\n  return { type: actionTypes.MODAL_INACTIVE }\n}\n\nexport const avatarModalStateOn = () => {\n  return { type: actionTypes.AVATAR_MODAL_ACTIVE }\n}\n\nexport const avatarModalStateOff = () => {\n  return { type: actionTypes.AVATAR_MODAL_INACTIVE }\n}\n","/* initial state */\nexport var usersStartState = {\n  accountVerified: null,\n  isLoggedIn: false,\n  error: true,\n  userAvatar: ''\n};\n\n/* action types */\nexport const actionTypes = {\n  RESET_USER_ACCOUNT_IS_VERIFIED: 'RESET_USER_ACCOUNT_IS_VERIFIED',\n  USER_ACCOUNT_IS_VERIFIED: 'USER_ACCOUNT_IS_VERIFIED',\n  USER_ACCOUNT_NOT_VERIFIED: 'USER_ACCOUNT_NOT_VERIFIED',\n  IS_LOGGED_IN: 'IS_LOGGED_IN',\n  IS_LOGGED_OUT: 'IS_LOGGED_OUT',\n  LOAD_USER_AVATAR: 'LOAD_USER_AVATAR',\n  ERROR_LOADING: 'ERROR_LOADING' // LOAD_MULTER_IMAGE: \"LOAD_MULTER_IMAGE\"\n};\n\n/* reducer(s) */\nexport default function users(state = usersStartState, action) {\n  switch (action.type) {\n    case actionTypes.RESET_USER_ACCOUNT_IS_VERIFIED:\n      return Object.assign({}, state, { accountVerified: null });\n\n    case actionTypes.USER_ACCOUNT_IS_VERIFIED:\n      return Object.assign({}, state, { accountVerified: true });\n\n    case actionTypes.USER_ACCOUNT_NOT_VERIFIED:\n      return Object.assign({}, state, { accountVerified: false });\n\n    case actionTypes.IS_LOGGED_IN:\n      return Object.assign({}, state, { isLoggedIn: true });\n\n    case actionTypes.IS_LOGGED_OUT:\n      return Object.assign({}, state, { isLoggedIn: false });\n\n    case actionTypes.LOAD_USER_AVATAR:\n      return Object.assign({}, state, { error: false, userAvatar: action.data });\n\n    case actionTypes.ERROR_LOADING:\n      return Object.assign({}, state, { error: true });\n\n    default:\n      return state;\n  }\n}\n\n/* actions */\nexport const resetUserAcoountVerified = () => {\n  return { type: actionTypes.RESET_USER_ACCOUNT_IS_VERIFIED };\n};\n\nexport const userHasBeenVerified = () => {\n  return { type: actionTypes.USER_ACCOUNT_IS_VERIFIED };\n};\n\nexport const userHasNotBeenVerified = () => {\n  return { type: actionTypes.USER_ACCOUNT_NOT_VERIFIED };\n};\n\nexport const logInUser = () => {\n  return { type: actionTypes.IS_LOGGED_IN };\n};\n\nexport const logOutUser = () => {\n  return { type: actionTypes.IS_LOGGED_OUT };\n};\n\nexport const loadAvatar = data => {\n  return { type: actionTypes.LOAD_USER_AVATAR, data };\n};\n\nexport const errorLoading = () => {\n  return { type: actionTypes.ERROR_LOADING };\n};\n","import { Responsive } from 'semantic-ui-react';\nimport { sanitize } from 'indicative/sanitizer';\n\nimport { extend, validate, validateAll } from 'indicative/validator';\nimport { validations } from 'indicative/validator';\n\nexport function getWidthFactory(isMobileFromSSR) {\n  return function() {\n    var isSSR = typeof window === 'undefined';\n    var ssrValue = isMobileFromSSR\n      ? Responsive.onlyMobile.maxWidth\n      : Responsive.onlyTablet.minWidth;\n    return isSSR ? ssrValue : window.innerWidth;\n  };\n}\n\nexport function validateInputs(\n  formType,\n  username,\n  setUsernameError,\n  setUsernameFeedback,\n  password,\n  password_confirmation,\n  setPasswordConfirmationError,\n  setPasswordConfirmationFeedback,\n  setPasswordError,\n  setPasswordFeedback,\n  setDisableButton\n) {\n  function getFormValidation(formType) {\n    function isLoginOrRegistration() {\n      var data = {\n        username: username,\n        password: password\n      };\n\n      var schema = {\n        username: 'email',\n        // username: [\n        //   validations.regex([\n        //     new RegExp(\n        //       '/^(([^<>()[]\\\\.,;:s@\"]+(.[^<>()[]\\\\.,;:s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))$/'\n        //     )\n        //   ])\n        // ],\n        password: 'min:7|max:11'\n      };\n      var messages = {\n        email: 'Make sure this is a valid email!!',\n        // regex: 'Make sure this is a valid email!!',\n        min: 'The value is too short',\n        max: 'The value is too long'\n      };\n\n      // sanitize(data, sanitizeSchema);\n\n      validateAll(data, schema, messages)\n        .then(success => {\n          if (success.username) {\n            console.log('success.username ', success.username);\n            setUsernameError(false);\n          }\n\n          if (success.password) {\n            console.log('success.password ', success.password);\n            setPasswordError(false);\n          }\n          if (success.username && success.password) {\n            console.log('success.username ', success.username);\n            setDisableButton(false);\n          }\n        })\n        .catch(errors => {\n          console.log('errors ', errors);\n          if (errors[0].field === 'username') {\n            setUsernameError(true);\n            setDisableButton(true);\n            setUsernameFeedback(errors[0].message);\n          }\n\n          if (errors[0].field === 'password') {\n            setPasswordError(true);\n            setDisableButton(true);\n            setPasswordFeedback(errors[0].message);\n          }\n        });\n    }\n    function isConfirmation() {\n      validate(data, schema, messages)\n        .then(success => {\n          console.log('success ', success);\n          if (success.password === success.password_confirmation) {\n            setDisableButton(false),\n              setFormSuccess(true),\n              setFormError(false),\n              setPasswordError(false),\n              setPassword_confirmationError(false);\n          }\n        })\n        .catch(errors => {\n          console.log('errors ', errors);\n          if (errors[0].field === 'password') {\n            setPasswordError(true);\n            setPasswordFeedBack(errors[0].message);\n            setDisableButton(true);\n            setFormSuccess(false);\n            setFormError(true);\n          }\n\n          if (errors[0].field !== 'password') {\n            setPasswordError(false);\n            setPasswordFeedBack('');\n          }\n\n          if (errors[0].field === 'password_confirmation') {\n            setPasswordConfirmationError(false);\n            setPasswordConfirmationFeedback(errors[0].message);\n            setDisableButton(true);\n            setFormSuccess(false);\n            setFormError(true);\n          }\n\n          if (errors[0].field !== 'password_confirmation') {\n            setPasswordConfirmationError(false);\n            setPasswordConfirmationFeedback('');\n          }\n        });\n    }\n\n    function isForgotPassword() {\n      var data = {\n        username: username\n      };\n      var sanitizeSchema = {\n        username: 'normalize_email'\n      };\n      var schema = {\n        username: 'email'\n      };\n      var messages = {\n        required: 'Make sure to enter the field value',\n        email: 'Enter valid email address'\n      };\n      validate(data, schema, messages)\n        .then(success => {\n          if (success.username) {\n            console.log('success.username ', success.username);\n            setUsernameError(false);\n            setDisableButton(false);\n          }\n        })\n        .catch(errors => {\n          console.log('errors ', errors);\n          if (errors[0].validation === 'email') {\n            const { message } = errors[0];\n            setUsernameError(true);\n            setDisableButton(true);\n            setUsernameFeedback(message);\n          }\n        });\n    }\n\n    function isUpdatePassword() {\n      var data = {\n        password: password,\n        password_confirmation: password_confirmation\n      };\n      var schema = {\n        password: 'min:4|max:11|string',\n        password_confirmation: 'required|min:4|max:11|string|same:password'\n      };\n      var messages = {\n        required: 'Make sure to enter the field value',\n        min: 'Password is too short.',\n        max: 'Password is too long.',\n        same: 'Password must match.'\n      };\n      // extend('username', {\n      //   async: true\n      // });\n\n      validate(data, schema, messages)\n        .then(success => {\n          console.log('success ', success);\n          // if (success.password) {\n          //   setPasswordError(false);\n          //   // if (success.password_confirmation) {\n          //   //   setPasswordConfirmationError(false);\n          //   // }\n\n          //   if (success.password === success.password_confirmation) {\n          //     console.log('success.username ', success.username);\n          //     setPasswordConfirmationError(false);\n          //     setDisableButton(false);\n          //     setPasswordConfirmationError(false);\n          //   }\n          // }\n        })\n        .catch(errors => {\n          console.log('errors ', errors);\n          if (errors[0].field === 'password') {\n            setPasswordError(true);\n            setPasswordFeedback(errors[0].message);\n            setDisableButton(true);\n          }\n\n          if (errors[0].field === 'password_confirmation') {\n            setPasswordConfirmationError(true);\n            setPasswordConfirmationFeedback(errors[0].message);\n            setDisableButton(true);\n          }\n        });\n    }\n\n    var Forms = {\n      Login: isLoginOrRegistration,\n      Registration: isLoginOrRegistration,\n      ForgotPassword: isForgotPassword,\n      UpdatePassword: isUpdatePassword\n    };\n\n    try {\n      //  setFormError(false);\n      Forms[formType]();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return getFormValidation(formType);\n}\n","module.exports = require(\"axios\");","module.exports = require(\"indicative/sanitizer\");","module.exports = require(\"indicative/validator\");","module.exports = require(\"next/head\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-router-dom\");","module.exports = require(\"redux\");","module.exports = require(\"semantic-ui-react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAYA;AAEA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAWA;AAAA;AAAA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAWA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AASA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAWA;AAAA;AAAA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAIA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAIA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAaA;AACA;AACA;AACA;AAEA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AADA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACxxBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AACA;AAaA;AACA;AACA;AACA;AAHA;AAOA;;;;;;;;;;;;;;;;;;;;ACzBA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AADA;AAwBA;AACA;AACA;AAvBA;AACA;AADA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAcA;AAAA;AAMA;AAAA;AAEA;AAAA;AASA;AACA;AAjIA;AACA;AAkIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AAVA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAQA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAaA;AACA;AAlDA;AACA;AAmDA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAaA;AACA;AACA;AAEA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAXA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAIA;AAAA;AAEA;AAAA;AASA;AAAA;AAOA;AAAA;AAEA;AAAA;AAQA;AAAA;AAEA;AAAA;AAQA;AAAA;AAEA;AAAA;AAeA;AAAA;AASA;AAAA;AAOA;AAAA;AAMA;AAAA;AAEA;AAAA;AAGA;AAAA;AAKA;AAAA;AAOA;AAAA;AAGA;AACA;AACA;AAHA;AAOA;AAAA;AAOA;AAAA;AAMA;AAAA;AAQA;AAAA;AAOA;AAAA;AAMA;AAAA;AAEA;AAAA;AAGA;AAAA;AAKA;AAAA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7PA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAWA;AAQA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AAQA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AASA;AACA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAAA;AACA;AAJA;AAIA;AAAA;AAJA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AALA;AAWA;AACA;AAEA;AAUA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAOA;AACA;AA9EA;AACA;AA+EA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAAA;AACA;AAJA;AAKA;AAAA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AAEA;AAWA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAcA;AACA;AA1GA;AACA;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC5XA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AATA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AANA;AAgBA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AALA;AAWA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AAFA;AAKA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJA;AAYA;AACA;AAxGA;AACA;AAyGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAGA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAfA;AAiBA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAvBA;AAyBA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAaA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAJA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtOA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}