{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { PureComponent } from 'react';\nimport { Button, Card, Icon, Image, Grid, Input, Segment, Form } from 'semantic-ui-react';\nimport ImageModal from '../Modal/MyModal.jsx';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { loadAvatar, errorLoading } from '../../store/reducers/users/index';\nimport { avatarModalStateOn } from '../../store/reducers/ui/index';\n\nvar ImageUploader =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(ImageUploader, _PureComponent);\n\n  function ImageUploader(props) {\n    var _this;\n\n    _classCallCheck(this, ImageUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUploader).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"fileInputRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"fileChange\", function (e) {\n      _this.uploadImage(e, \"multer\");\n    });\n\n    _this.state = {\n      userAvatar: _this.props.userAvatar\n    };\n    _this.uploadImage = _this.uploadImage.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ImageUploader, [{\n    key: \"setDefaultImage\",\n    value: function setDefaultImage() {\n      var defaultImage = '../../static/profile-avatars/assets/default-img.jpg';\n      this.loadAvatarImage(defaultImage);\n    }\n  }, {\n    key: \"loadAvatarImage\",\n    value: function loadAvatarImage(img) {\n      var loadAvatar = this.props.loadAvatar;\n      loadAvatar(img);\n    }\n  }, {\n    key: \"uploadImage\",\n    value: function uploadImage(e, method) {\n      var _this2 = this;\n\n      e.stopPropagation();\n      var _this$props = this.props,\n          avatarModalStateOn = _this$props.avatarModalStateOn,\n          errorLoading = _this$props.errorLoading;\n\n      if (method === \"multer\") {\n        var imageFormObj = new FormData();\n        imageFormObj.append(\"imageName\", \"multer-image-\" + _Date$now());\n        imageFormObj.append(\"imageData\", e.target.files[0]);\n        this.loadAvatarImage(window.URL.createObjectURL(e.target.files[0]));\n        var config = {\n          headers: {\n            'content-type': 'multipart/form-data'\n          }\n        };\n        axios.post(\"http://localhost:8016/images/uploadmulter\", imageFormObj, config).then(function (data) {\n          if (data.data.success) {\n            console.log(\"data \", data);\n            avatarModalStateOn();\n          }\n        })[\"catch\"](function (err) {\n          if (err.response.status === 500) {\n            console.log(err.response.status);\n            avatarModalStateOn();\n\n            _this2.setDefaultImage();\n\n            errorLoading();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          userAvatar = _this$props2.userAvatar,\n          avatarModalActive = _this$props2.avatarModalActive,\n          error = _this$props2.error;\n      console.log(\"avatarModalActive \", avatarModalActive);\n      var ImageLoaded;\n\n      if (avatarModalActive) {\n        ImageLoaded = __jsx(ImageModal, {\n          key: \"AlertModal\",\n          isAlertModal: avatarModalActive,\n          affirmativeUsed: \"OK!\",\n          message: \"Your image has been uploaded succesfully\"\n        });\n      } else if (avatarModalActive && error) {\n        ImageLoaded = __jsx(ImageModal, {\n          key: \"AlertModal\",\n          isAlertModal: avatarModalActive,\n          affirmativeUsed: \"OK!\",\n          message: \"There was an error uploading your image, file size was to big!\"\n        });\n      }\n\n      return __jsx(React.Fragment, null, __jsx(Segment, null, __jsx(Card, {\n        fluid: true\n      }, __jsx(Image, {\n        wrapped: true,\n        ui: false,\n        src: userAvatar || this.setDefaultImage(),\n        alt: \"upload-image\"\n      }), __jsx(Segment, null, __jsx(Form, {\n        encType: \"multipart/form-data\"\n      }, __jsx(Form.Field, null, __jsx(Button, {\n        content: \"Edit your Avatar!\",\n        labelPosition: \"left\",\n        icon: \"file\",\n        onClick: function onClick() {\n          return _this3.fileInputRef.current.click();\n        }\n      }), __jsx(\"input\", {\n        ref: this.fileInputRef,\n        type: \"file\",\n        name: \"avatar\",\n        hidden: true,\n        onChange: this.fileChange\n      })))), __jsx(Card.Content, null, __jsx(Card.Header, null, \"Charly\"), __jsx(Card.Meta, null, __jsx(\"span\", {\n        className: \"date\"\n      }, \"Joined in 2015\")), __jsx(Card.Description, null, \"Charly\")), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(\"a\", null, __jsx(Icon, {\n        name: \"user\"\n      }), \"22 Friends\")))), ImageLoaded);\n    }\n  }]);\n\n  return ImageUploader;\n}(PureComponent);\n\nfunction mapStateToProps(state) {\n  var ui = state.ui,\n      users = state.users;\n  var userAvatar = users.userAvatar,\n      error = users.error;\n  var avatarModalActive = ui.avatarModalActive;\n  return {\n    userAvatar: userAvatar,\n    avatarModalActive: avatarModalActive,\n    error: error\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loadAvatar: loadAvatar,\n    errorLoading: errorLoading,\n    avatarModalStateOn: avatarModalStateOn\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUploader);","map":{"version":3,"sources":["/Users/antonio-pavicevac-ortiz/Dropbox/developer_folder/hillfinder/components/ImageUploader/ImageUploader.jsx"],"names":["React","PureComponent","Button","Card","Icon","Image","Grid","Input","Segment","Form","ImageModal","axios","connect","bindActionCreators","loadAvatar","errorLoading","avatarModalStateOn","ImageUploader","props","createRef","e","uploadImage","state","userAvatar","bind","defaultImage","loadAvatarImage","img","method","stopPropagation","imageFormObj","FormData","append","target","files","window","URL","createObjectURL","config","headers","post","then","data","success","console","log","err","response","status","setDefaultImage","avatarModalActive","error","ImageLoaded","fileInputRef","current","click","fileChange","mapStateToProps","ui","users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport { Button, Card, Icon, Image, Grid, Input, Segment, Form } from 'semantic-ui-react'\n\nimport ImageModal from '../Modal/MyModal.jsx'\nimport axios from 'axios';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { loadAvatar, errorLoading } from '../../store/reducers/users/index'\nimport { avatarModalStateOn } from '../../store/reducers/ui/index'\n\nclass ImageUploader extends PureComponent {\n constructor(props) {\n  super(props);\n\n  this.state = {\n   userAvatar : this.props.userAvatar\n  }\n\n  this.uploadImage = this.uploadImage.bind(this);\n }\n\n fileInputRef = React.createRef();\n\n\n setDefaultImage() {\n  var defaultImage = '../../static/profile-avatars/assets/default-img.jpg';\n  this.loadAvatarImage(defaultImage)\n }\n\n loadAvatarImage(img) {\n  var { loadAvatar } = this.props;\n  loadAvatar(img)\n }\n\n fileChange = (e) => {\n  this.uploadImage(e, \"multer\");\n }\n\n uploadImage(e, method) {\n  e.stopPropagation();\n\n  const { avatarModalStateOn, errorLoading } = this.props\n\n  if (method === \"multer\") {\n\n   let imageFormObj = new FormData();\n\n   imageFormObj.append(\"imageName\", \"multer-image-\" + Date.now());\n   imageFormObj.append(\"imageData\", e.target.files[0]);\n\n   this.loadAvatarImage(window.URL.createObjectURL(e.target.files[0]))\n\n   var config = { headers: { 'content-type': 'multipart/form-data' } }\n   axios.post(`http://localhost:8016/images/uploadmulter`, imageFormObj, config)\n    .then((data) => {\n     if (data.data.success) {\n      console.log(\"data \", data);\n      avatarModalStateOn();\n     }\n    })\n    .catch((err) => {\n     if (err.response.status === 500) {\n      console.log(err.response.status);\n      avatarModalStateOn();\n      this.setDefaultImage()\n      errorLoading();\n     }\n    });\n  }\n }\n\n render() {\n\n  var { userAvatar, avatarModalActive, error } = this.props;\n\n  console.log(\"avatarModalActive \", avatarModalActive);\n\n  var ImageLoaded;\n    if (avatarModalActive) {\n      ImageLoaded = <ImageModal\n        key=\"AlertModal\"\n        isAlertModal={avatarModalActive}\n        affirmativeUsed=\"OK!\"\n        message=\"Your image has been uploaded succesfully\"\n     />\n    } else if (avatarModalActive && error){\n     ImageLoaded =  <ImageModal\n      key=\"AlertModal\"\n      isAlertModal={avatarModalActive}\n      affirmativeUsed=\"OK!\"\n      message=\"There was an error uploading your image, file size was to big!\"\n     />\n    }\n\n  return <>\n      <Segment>\n        <Card fluid>\n         <Image wrapped ui={false} src={userAvatar || this.setDefaultImage()} alt=\"upload-image\" />\n          <Segment>\n           <Form encType=\"multipart/form-data\">\n            <Form.Field>\n             <Button\n              content=\"Edit your Avatar!\"\n              labelPosition=\"left\"\n              icon=\"file\"\n              onClick={() => this.fileInputRef.current.click()}\n             />\n             <input\n              ref={this.fileInputRef}\n              type=\"file\"\n              name=\"avatar\"\n              hidden\n              onChange={this.fileChange}\n             />\n            </Form.Field>\n           </Form>\n          </Segment>\n          <Card.Content>\n\n           <Card.Header>Charly</Card.Header>\n           <Card.Meta>\n            <span className='date'>Joined in 2015</span>\n           </Card.Meta>\n           <Card.Description>\n            Charly\n           </Card.Description>\n           </Card.Content>\n           <Card.Content extra>\n           <a>\n            <Icon name='user' />\n            22 Friends\n           </a>\n          </Card.Content>\n       </Card>\n     </Segment>\n   {ImageLoaded}\n\n  </>;\n }\n}\n\nfunction mapStateToProps(state) {\n const { ui, users } = state\n const { userAvatar, error } = users\n const { avatarModalActive } = ui\n\n return { userAvatar, avatarModalActive, error }\n}\n\nconst mapDispatchToProps = dispatch =>\n bindActionCreators({ loadAvatar, errorLoading, avatarModalStateOn }, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageUploader)\n"]},"metadata":{},"sourceType":"module"}