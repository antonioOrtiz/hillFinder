{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\n/* imported reducers */\n\nimport ui from './reducers/ui/index';\nimport users from './reducers/users/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore } from 'redux-persist';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nvar rootReducer = combineReducers({\n  users: users,\n  ui: ui\n}); // var startState = Object.assign({}, uiStartState, usersStartState)\n\nexport default (() => {\n  let store;\n  const isClient = false;\n\n  if (isClient) {\n    const {\n      persistReducer\n    } = require('redux-persist');\n\n    const storage = require('redux-persist/lib/storage').default;\n\n    const persistConfig = {\n      key: 'root',\n      storage,\n      stateReconciler: autoMergeLevel2,\n      whitelist: ['users', 'ui'] // place to select which state you want to persist\n\n    };\n    store = createStore(persistReducer(persistConfig, rootReducer), composeWithDevTools(applyMiddleware(thunkMiddleware, createLogger({\n      collapsed: false\n    }))));\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware, createLogger({\n      collapsed: false\n    }))));\n  }\n\n  return store;\n});","map":{"version":3,"sources":["/Users/antonio-pavicevac-ortiz/Dropbox/developer_folder/hillfinder/store/index.js"],"names":["applyMiddleware","combineReducers","createStore","ui","users","composeWithDevTools","persistStore","createLogger","thunkMiddleware","autoMergeLevel2","rootReducer","store","isClient","persistReducer","require","storage","default","persistConfig","key","stateReconciler","whitelist","collapsed","__PERSISTOR"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AAIA;;AACA,OAAOC,EAAP,MAAe,qBAAf;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,eAAP,MAA4B,mDAA5B;AAEA,IAAIC,WAAW,GAAGT,eAAe,CAAC;AAChCG,EAAAA,KAAK,EAAEA,KADyB;AAEhCD,EAAAA,EAAE,EAAEA;AAF4B,CAAD,CAAjC,C,CAKA;;AAEA,gBAAe,MAAM;AACnB,MAAIQ,KAAJ;AACA,QAAMC,QAAQ,QAAd;;AACA,MAAIA,QAAJ,EAAc;AACZ,UAAM;AAAEC,MAAAA;AAAF,QAAqBC,OAAO,CAAC,eAAD,CAAlC;;AACA,UAAMC,OAAO,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCE,OAArD;;AACA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,GAAG,EAAE,MADe;AAEpBH,MAAAA,OAFoB;AAGpBI,MAAAA,eAAe,EAAEV,eAHG;AAKpBW,MAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,IAAV,CALS,CAKQ;;AALR,KAAtB;AAQAT,IAAAA,KAAK,GAAGT,WAAW,CACjBW,cAAc,CAACI,aAAD,EAAgBP,WAAhB,CADG,EAEjBL,mBAAmB,CAACL,eAAe,CACjCQ,eADiC,EAEjCD,YAAY,CAAC;AAAEc,MAAAA,SAAS,EAAE;AAAb,KAAD,CAFqB,CAAhB,CAFF,CAAnB;AAOAV,IAAAA,KAAK,CAACW,WAAN,GAAoBhB,YAAY,CAACK,KAAD,CAAhC;AACD,GAnBD,MAmBO;AACLA,IAAAA,KAAK,GAAGT,WAAW,CACjBQ,WADiB,EAEjBL,mBAAmB,CAACL,eAAe,CACjCQ,eADiC,EAEjCD,YAAY,CAAC;AAAEc,MAAAA,SAAS,EAAE;AAAb,KAAD,CAFqB,CAAhB,CAFF,CAAnB;AAOD;;AACD,SAAOV,KAAP;AACD,CAhCD","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux'\n\n\n\n/* imported reducers */\nimport ui from './reducers/ui/index'\nimport users from './reducers/users/index'\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore } from 'redux-persist';\n\nimport { createLogger } from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\n\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nvar rootReducer = combineReducers({\n  users: users,\n  ui: ui\n})\n\n// var startState = Object.assign({}, uiStartState, usersStartState)\n\nexport default () => {\n  let store;\n  const isClient = typeof window !== 'undefined';\n  if (isClient) {\n    const { persistReducer } = require('redux-persist');\n    const storage = require('redux-persist/lib/storage').default;\n    const persistConfig = {\n      key: 'root',\n      storage,\n      stateReconciler: autoMergeLevel2,\n\n      whitelist: ['users', 'ui'], // place to select which state you want to persist\n\n    }\n    store = createStore(\n      persistReducer(persistConfig, rootReducer),\n      composeWithDevTools(applyMiddleware(\n        thunkMiddleware,\n        createLogger({ collapsed: false })\n      ))\n    );\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(\n      rootReducer,\n      composeWithDevTools(applyMiddleware(\n        thunkMiddleware,\n        createLogger({ collapsed: false })\n      ))\n    );\n  }\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}