{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { logOutUser } from '../store/reducers/users/index';\nimport { withRouter } from \"react-router-dom\";\nvar Dashboard;\n\nDashboard = function Dashboard(_ref) {\n  var isLoggedIn = _ref.isLoggedIn,\n      logOutUser = _ref.logOutUser;\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Dashboard\"));\n};\n\nfunction mapStateToProps(state) {\n  var users = state.users;\n  var isLoggedIn = users.isLoggedIn;\n  return {\n    isLoggedIn: isLoggedIn\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    logOutUser: logOutUser\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Dashboard));","map":{"version":3,"sources":["/Users/antonio-pavicevac-ortiz/Dropbox/developer_folder/hillfinder/pages/dashboard.jsx"],"names":["connect","bindActionCreators","logOutUser","withRouter","Dashboard","isLoggedIn","mapStateToProps","state","users","mapDispatchToProps","dispatch"],"mappings":";;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,IAAIC,SAAJ;;AAEAA,SAAS,GAAG;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeH,UAAf,QAAeA,UAAf;AAAA,SACX,4BACA,8BADA,CADW;AAAA,CAAZ;;AAQA,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,MACtBC,KADsB,GACZD,KADY,CACtBC,KADsB;AAAA,MAEtBH,UAFsB,GAEPG,KAFO,CAEtBH,UAFsB;AAG/B,SAAO;AAAEA,IAAAA,UAAU,EAAVA;AAAF,GAAP;AACA;;AACD,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAClCT,kBAAkB,CAAC;AAAEC,IAAAA,UAAU,EAAVA;AAAF,GAAD,EAAiBQ,QAAjB,CADgB;AAAA,CAAnC;;AAGA,eAAeP,UAAU,CACxBH,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CL,SAA7C,CADwB,CAAzB","sourcesContent":["\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { logOutUser } from '../store/reducers/users/index'\nimport { withRouter } from \"react-router-dom\";\n\nlet Dashboard;\n\nDashboard = ({ isLoggedIn, logOutUser }) => (\n <>\n <h1>Dashboard</h1>\n </>\n);\n\n\n\nfunction mapStateToProps(state) {\n  const { users } = state\n  const { isLoggedIn } = users\n return { isLoggedIn }\n}\nconst mapDispatchToProps = dispatch =>\n bindActionCreators({ logOutUser }, dispatch)\n\nexport default withRouter(\n connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n)\n"]},"metadata":{},"sourceType":"module"}