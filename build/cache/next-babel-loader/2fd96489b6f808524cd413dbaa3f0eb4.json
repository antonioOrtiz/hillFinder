{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logInUser, logOutUser } from '../store/reducers/users/index';\nimport { bindActionCreators } from 'redux';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport LinkNavWithLayout from './LinkNavWithLayout';\nimport Index from './home';\nimport Profile from './profile';\nimport Dashboard from './dashboard';\nimport ForgotPassword from './forgotPassword';\nimport UpdatePassword from './updatePassword';\nimport Login from './login';\nimport Confirmation from './confirmation';\nimport { modalStateOn, modalStateOff } from '../store/reducers/ui/index';\nimport Register from './register';\n\nclass App extends Component {\n  static getInitialProps({\n    store,\n    accountVerified,\n    isLoggedIn,\n    logInUser,\n    logOutUser\n  }) {\n    console.log('store', store);\n    return {\n      store,\n      accountVerified,\n      isLoggedIn,\n      logInUser,\n      logOutUser\n    };\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      accountVerified\n    } = this.props;\n    console.log('accountVerified ', accountVerified);\n    console.log('this.props ', this.props);\n    let navBars = [{\n      name: 'Home',\n      path: '/'\n    }, {\n      name: 'Profile',\n      path: '/profile'\n    }, {\n      name: 'Dashboard',\n      path: '/dashboard'\n    }, {\n      name: 'Log in',\n      path: '/login'\n    }, {\n      name: 'Register',\n      path: '/register'\n    }];\n\n    function PrivateRoute(_ref) {\n      let {\n        children\n      } = _ref,\n          rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n      return __jsx(Route, _extends({}, rest, {\n        render: ({\n          location\n        }) => isLoggedIn && accountVerified ? _objectSpread({}, children) : __jsx(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              from: location\n            }\n          }\n        })\n      }));\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Switch, null, __jsx(Route, {\n      path: \"/\",\n      isLoggedIn: isLoggedIn,\n      exact: true,\n      render: props => __jsx(LinkNavWithLayout, _extends({}, props, {\n        data: navBars\n      }), __jsx(Index, null))\n    }), __jsx(PrivateRoute, {\n      path: \"/profile\",\n      isLoggedIn: isLoggedIn\n    }, __jsx(LinkNavWithLayout, {\n      data: navBars\n    }, __jsx(Profile, {\n      user: true\n    }))), __jsx(PrivateRoute, {\n      path: \"/dashboard\",\n      isLoggedIn: isLoggedIn\n    }, __jsx(LinkNavWithLayout, {\n      data: navBars\n    }, __jsx(Dashboard, null))), __jsx(Route, {\n      path: \"/login\",\n      render: props => __jsx(Login, _extends({\n        accountVerified: accountVerified\n      }, props))\n    }), __jsx(Route, {\n      path: \"/forgot_password\",\n      render: props => __jsx(ForgotPassword, props)\n    }), __jsx(PrivateRoute, {\n      path: \"/update_password/:token\",\n      component: UpdatePassword\n    }), __jsx(PrivateRoute, {\n      path: \"/confirmed/:token\",\n      accountVerified: accountVerified,\n      component: Confirmation\n    }), __jsx(Route, {\n      path: \"/register\",\n      render: props => __jsx(Register, props)\n    }), __jsx(Route, {\n      component: ({\n        location\n      }) => __jsx(\"h1\", null, \"Sorry but the page\", ' ', __jsx(\"p\", {\n        style: {\n          fontWeight: 'strong'\n        }\n      }, location.pathname.substring(1), \" \"), ' ', \"Page, Could Not be found\")\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    ui,\n    users\n  } = state;\n  const {\n    isLoggedIn,\n    userAvatar,\n    accountVerified\n  } = users;\n  const {\n    modalActive\n  } = ui;\n  return {\n    isLoggedIn,\n    accountVerified,\n    userAvatar,\n    modalActive\n  };\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  modalStateOn,\n  modalStateOff,\n  logInUser,\n  logOutUser\n}, dispatch);\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/antonio-pavicevac-ortiz/Dropbox/developer_folder/hillfinder/pages/index.jsx"],"names":["React","Component","connect","logInUser","logOutUser","bindActionCreators","Switch","Route","Redirect","withRouter","LinkNavWithLayout","Index","Profile","Dashboard","ForgotPassword","UpdatePassword","Login","Confirmation","modalStateOn","modalStateOff","Register","App","getInitialProps","store","accountVerified","isLoggedIn","console","log","constructor","props","render","navBars","name","path","PrivateRoute","children","rest","location","pathname","state","from","fontWeight","substring","mapStateToProps","ui","users","userAvatar","modalActive","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logInUser, logOutUser } from '../store/reducers/users/index';\nimport { bindActionCreators } from 'redux';\n\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\n\nimport LinkNavWithLayout from './LinkNavWithLayout';\nimport Index from './home';\nimport Profile from './profile';\nimport Dashboard from './dashboard';\nimport ForgotPassword from './forgotPassword';\nimport UpdatePassword from './updatePassword';\nimport Login from './login';\nimport Confirmation from './confirmation';\nimport { modalStateOn, modalStateOff } from '../store/reducers/ui/index';\n\nimport Register from './register';\n\nclass App extends Component {\n  static getInitialProps({ store, accountVerified, isLoggedIn, logInUser, logOutUser }) {\n    console.log('store', store);\n\n    return { store, accountVerified, isLoggedIn, logInUser, logOutUser };\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { isLoggedIn, accountVerified } = this.props;\n    console.log('accountVerified ', accountVerified);\n\n    console.log('this.props ', this.props);\n\n    let navBars = [\n      { name: 'Home', path: '/' },\n      { name: 'Profile', path: '/profile' },\n      { name: 'Dashboard', path: '/dashboard' },\n      { name: 'Log in', path: '/login' },\n      { name: 'Register', path: '/register' }\n    ];\n\n    function PrivateRoute({ children, ...rest }) {\n      return (\n        <Route\n          {...rest}\n          render={({ location }) =>\n            isLoggedIn && accountVerified ? (\n              { ...children }\n            ) : (\n              <Redirect\n                to={{\n                  pathname: '/',\n                  state: { from: location }\n                }}\n              />\n            )\n          }\n        />\n      );\n    }\n\n    return (\n      <>\n        <Switch>\n          <Route\n            path=\"/\"\n            isLoggedIn={isLoggedIn}\n            exact\n            render={props => (\n              <LinkNavWithLayout {...props} data={navBars}>\n                <Index />\n              </LinkNavWithLayout>\n            )}\n          />\n\n          <PrivateRoute path=\"/profile\" isLoggedIn={isLoggedIn}>\n            <LinkNavWithLayout data={navBars}>\n              <Profile user />\n            </LinkNavWithLayout>\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/dashboard\" isLoggedIn={isLoggedIn}>\n            <LinkNavWithLayout data={navBars}>\n              <Dashboard />\n            </LinkNavWithLayout>\n          </PrivateRoute>\n\n          <Route\n            path=\"/login\"\n            render={props => <Login accountVerified={accountVerified} {...props} />}\n          />\n\n          <Route\n            path=\"/forgot_password\"\n            render={props => <ForgotPassword {...props} />}\n          />\n\n          <PrivateRoute path=\"/update_password/:token\" component={UpdatePassword} />\n\n          <PrivateRoute\n            path=\"/confirmed/:token\"\n            accountVerified={accountVerified}\n            component={Confirmation}\n          />\n\n          <Route path=\"/register\" render={props => <Register {...props} />} />\n\n          <Route\n            component={({ location }) => (\n              <h1>\n                Sorry but the page{' '}\n                <p style={{ fontWeight: 'strong' }}>{location.pathname.substring(1)} </p>{' '}\n                Page, Could Not be found\n              </h1>\n            )}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { ui, users } = state;\n  const { isLoggedIn, userAvatar, accountVerified } = users;\n  const { modalActive } = ui;\n  return { isLoggedIn, accountVerified, userAvatar, modalActive };\n}\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ modalStateOn, modalStateOff, logInUser, logOutUser }, dispatch);\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n"]},"metadata":{},"sourceType":"module"}