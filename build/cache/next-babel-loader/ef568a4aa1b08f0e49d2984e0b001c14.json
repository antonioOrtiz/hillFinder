{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { logOutUser } from '../../store/reducers/users/index';\nimport { modalStateOn, modalStateOff } from '../../store/reducers/ui/index';\n\nclass MyModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"close\", () => {\n      const {\n        modalStateOff\n      } = this.props;\n      modalStateOff();\n    });\n\n    _defineProperty(this, \"logOutUser\", () => {\n      const {\n        logOutUser\n      } = this.props;\n      logOutUser();\n    });\n  }\n\n  render() {\n    const {\n      modalActive,\n      isAlertModal\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Modal, {\n      dimmer: 'blurring',\n      centered: true,\n      size: 'mini',\n      open: modalActive,\n      onClose: this.close\n    }, __jsx(Modal.Header, null, __jsx(\"p\", null, this.props.message)), __jsx(Modal.Actions, null, this.props.isAlertModal ? __jsx(Button, {\n      color: \"black\",\n      onClick: this.close,\n      content: this.props.affirmativeUsed\n    }) : __jsx(React.Fragment, null, __jsx(Button, {\n      color: \"black\",\n      onClick: this.close\n    }, \"No\"), __jsx(Button, {\n      positive: true,\n      icon: \"checkmark\",\n      labelPosition: \"right\",\n      content: this.props.affirmativeUsed,\n      onClick: () => {\n        this.close();\n        this.logOutUser();\n      }\n    })))));\n  }\n\n}\n\nMyModal.propTypes = {\n  message: PropTypes.string,\n  affirmativeUsed: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n  const {\n    ui\n  } = state;\n  const {\n    modalActive\n  } = ui;\n  return {\n    modalActive\n  };\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  logOutUser,\n  modalStateOn,\n  modalStateOff\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyModal);","map":{"version":3,"sources":["/Users/antonio-pavicevac-ortiz/Dropbox/developer_folder/hillfinder/components/Modal/MyModal.jsx"],"names":["React","Component","Button","Modal","PropTypes","connect","bindActionCreators","logOutUser","modalStateOn","modalStateOff","MyModal","props","render","modalActive","isAlertModal","close","message","affirmativeUsed","propTypes","string","mapStateToProps","state","ui","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA4B,kCAA5B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA6C,+BAA7C;;AAGA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCAEvB,MAAM;AACb,YAAM;AAAEQ,QAAAA;AAAF,UAAoB,KAAKE,KAA/B;AACAF,MAAAA,aAAa;AACb,KAL8B;;AAAA,wCAOlB,MAAM;AAClB,YAAM;AAAEF,QAAAA;AAAF,UAAiB,KAAKI,KAA5B;AACAJ,MAAAA,UAAU;AACV,KAV8B;AAAA;;AAY/BK,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAgC,KAAKH,KAA3C;AAEC,WACC,4BACE,MAAC,KAAD;AAAO,MAAA,MAAM,EAAE,UAAf;AAA2B,MAAA,QAAQ,EAAE,IAArC;AAA2C,MAAA,IAAI,EAAE,MAAjD;AAAyD,MAAA,IAAI,EAAEE,WAA/D;AAA4E,MAAA,OAAO,EAAE,KAAKE;AAA1F,OACE,MAAC,KAAD,CAAO,MAAP,QACC,iBAAI,KAAKJ,KAAL,CAAWK,OAAf,CADD,CADF,EAIE,MAAC,KAAD,CAAO,OAAP,QACE,KAAKL,KAAL,CAAWG,YAAX,GACD,MAAC,MAAD;AACC,MAAA,KAAK,EAAC,OADP;AAEC,MAAA,OAAO,EAAE,KAAKC,KAFf;AAGC,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWM;AAHrB,MADC,GAOF,4BACC,MAAC,MAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,OAAO,EAAE,KAAKF;AAFhB,YADD,EAOE,MAAC,MAAD;AACC,MAAA,QAAQ,MADT;AAEC,MAAA,IAAI,EAAC,WAFN;AAGC,MAAA,aAAa,EAAC,OAHf;AAIC,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWM,eAJrB;AAKC,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKF,KAAL;AAAc,aAAKR,UAAL;AAAmB;AALnD,MAPF,CARA,CAJF,CADF,CADD;AAkCD;;AAjD8B;;AAoDhCG,OAAO,CAACQ,SAAR,GAAoB;AACnBF,EAAAA,OAAO,EAAEZ,SAAS,CAACe,MADA;AAEnBF,EAAAA,eAAe,EAAEb,SAAS,CAACe;AAFR,CAApB;;AAKA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAf;AACA,QAAM;AAAER,IAAAA;AAAF,MAAkBS,EAAxB;AAEA,SAAO;AAAET,IAAAA;AAAF,GAAP;AACA;;AACD,MAAMU,kBAAkB,GAAGC,QAAQ,IAClClB,kBAAkB,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA;AAA5B,CAAD,EAA8Ce,QAA9C,CADnB;;AAGA,eAAenB,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Modal } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { logOutUser  } from '../../store/reducers/users/index'\nimport { modalStateOn, modalStateOff  } from '../../store/reducers/ui/index'\n\n\nclass MyModal extends Component {\n\n close = () => {\n  const { modalStateOff } = this.props\n  modalStateOff();\n }\n\n logOutUser = () => {\n  const { logOutUser } = this.props\n  logOutUser()\n }\n\n render() {\n  const { modalActive, isAlertModal } = this.props\n\n   return (\n    <>\n      <Modal dimmer={'blurring'} centered={true} size={'mini'} open={modalActive} onClose={this.close}>\n        <Modal.Header>\n         <p>{this.props.message}</p>\n        </Modal.Header>\n        <Modal.Actions>\n         {this.props.isAlertModal ?\n         <Button\n          color='black'\n          onClick={this.close}\n          content={this.props.affirmativeUsed}\n         />\n         :\n        <>\n         <Button\n           color='black'\n           onClick={this.close}\n          >\n           No\n          </Button>\n          <Button\n           positive\n           icon='checkmark'\n           labelPosition='right'\n           content={this.props.affirmativeUsed}\n           onClick={() => { this.close(); this.logOutUser() }}\n          />\n        </>\n         }\n        </Modal.Actions>\n      </Modal>\n    </>\n   )\n }\n}\n\nMyModal.propTypes = {\n message: PropTypes.string,\n affirmativeUsed: PropTypes.string\n}\n\nfunction mapStateToProps(state) {\n const { ui } = state\n const { modalActive } = ui\n\n return { modalActive }\n}\nconst mapDispatchToProps = dispatch =>\n bindActionCreators({ logOutUser, modalStateOn, modalStateOff }, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyModal)\n"]},"metadata":{},"sourceType":"module"}