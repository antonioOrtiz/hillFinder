{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Loader, Dimmer, Transition, Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { logInUser, userHasBeenVerified, userHasNotBeenVerified, resetUserAcoountVerified } from '../../store/reducers/users/index';\nimport { Link } from 'react-router-dom';\nimport { validateInputs } from '../../utils/index';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nfunction FormComponent({\n  formType,\n  match,\n  history,\n  logInUser,\n  accountVerified,\n  userHasBeenVerified,\n  userHasNotBeenVerified,\n  resetUserAcoountVerified\n}) {\n  var Forms = {\n    Confirmation: [isConfirmationForm],\n    ForgotPassword: [isForgotPasswordForm, forgotPasswordSubmit, isGenericUseEffect],\n    Login: [isLoginForm, loginSubmit, isGenericUseEffect],\n    Registration: [isRegisterForm, registerSubmit, isGenericUseEffect],\n    UpdatePassword: [isUpdatePasswordForm, updatePasswordSubmit, isGenericUseEffect]\n  };\n  var {\n    0: duration,\n    1: setDuration\n  } = useState(500);\n  var {\n    0: username,\n    1: setUsername\n  } = useState('');\n  var {\n    0: usernameFeedback,\n    1: setUsernameFeedback\n  } = useState('');\n  var {\n    0: usernameError,\n    1: setUsernameError\n  } = useState(false);\n  var {\n    0: userNameDup,\n    1: setUserNameDup\n  } = useState(false);\n  var {\n    0: password,\n    1: setPassword\n  } = useState('');\n  var {\n    0: passwordFeedback,\n    1: setPasswordFeedback\n  } = useState('');\n  var {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  var {\n    0: password_confirmation,\n    1: setPasswordConfirmation\n  } = useState('');\n  var {\n    0: passwordConfirmationError,\n    1: setPasswordConfirmationError\n  } = useState(false);\n  var {\n    0: passwordConfirmationFeedback,\n    1: setPasswordConfirmationFeedback\n  } = useState('');\n  var {\n    0: formSuccess,\n    1: setFormSuccess\n  } = useState(false);\n  var {\n    0: formError,\n    1: setFormError\n  } = useState(false);\n  var {\n    0: disableButton,\n    1: setDisableButton\n  } = useState(true);\n  var {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  var {\n    0: responseMessage,\n    1: setResponseMessage\n  } = useState({});\n  var {\n    0: tokenExpired,\n    1: setTokenExpired\n  } = useState(false);\n  var {\n    0: responseCodeSuccess,\n    1: setResponseCodeSuccess\n  } = useState(false);\n  var {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  function isConfirmationForm() {\n    useEffect(() => {\n      axios.get(`http://localhost:8016/users/confirmation/${match.params.token}`).then(response => {\n        if (response.status === 200) {\n          setError(false);\n          setResponseMessage(response.data.msg); // setTimeout(() => {\n          //   userHasBeenVerified();\n          // }, 1000);\n        }\n      }).catch(function (error) {\n        if (error.response.status === 404) {\n          // Token not in database\n          resetUserAcoountVerified();\n          setResponseMessage(error.response.data.msg);\n          setError(true);\n        }\n\n        if (error.response.status === 400) {\n          userHasBeenVerified();\n          setResponseMessage(error.response.data.msg);\n          setError(true);\n        }\n      });\n    }, []);\n\n    const isNull = value => typeof value === 'object' && !value;\n\n    return __jsx(\"div\", {\n      className: \"login-form\"\n    }, error === false ? __jsx(Transition, {\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      success: true,\n      header: responseMessage[0]\n    })) : '', accountVerified === true && error === true ? __jsx(Transition, {\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      header: responseMessage[0]\n    })) : '', isNull(accountVerified) && error === true ? __jsx(Transition, {\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      header: responseMessage[0]\n    })) : '');\n  }\n\n  function isForgotPasswordForm() {\n    return __jsx(\"div\", {\n      className: \"login-form\"\n    }, ' ', __jsx(\"style\", null, `body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`, ' '), __jsx(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100%'\n      },\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      style: {\n        maxWidth: 450\n      }\n    }, __jsx(Header, {\n      as: \"h2\",\n      color: \"green\",\n      textAlign: \"center\"\n    }, \"Forgot yee password?\"), __jsx(Message, {\n      color: \"olive\"\n    }, \"Not a problem. Just enter your email address below. If it's registered with Hillfinder, we'll send you a link to reset your password.\", ' '), __jsx(Form, {\n      size: \"large\",\n      onSubmit: e => handleSubmit(e, formType),\n      error: formError\n    }, __jsx(Segment, {\n      stacked: true\n    }, __jsx(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address, e.g. joe@schmoe.com\",\n      name: \"username\",\n      value: username,\n      onChange: e => handleChange(e),\n      error: usernameError\n    }), __jsx(Transition, {\n      visible: usernameError,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      content: usernameFeedback\n    })), __jsx(Button, {\n      color: \"green\",\n      fluid: true,\n      size: \"large\",\n      disabled: disableButton\n    }, \"Yes, send a link\"), __jsx(Transition, {\n      visible: formError,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      error: true,\n      centered: \"true\",\n      header: responseMessage[0],\n      content: responseMessage[1]\n    })), __jsx(Transition, {\n      visible: formSuccess,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      success: true,\n      header: responseMessage[0],\n      content: responseMessage[1]\n    })))), formError ? __jsx(Transition, {\n      visible: formError,\n      animation: \"scale\",\n      duration: 1000\n    }, __jsx(Message, null, __jsx(Link, {\n      to: \"/register\"\n    }, \"Register\"), ' ')) : null), ' '), ' ');\n  }\n\n  function isLoginForm() {\n    return __jsx(\"div\", {\n      className: \"login-form\"\n    }, ' ', __jsx(\"style\", null, `body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`, ' '), __jsx(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100%'\n      },\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      style: {\n        maxWidth: 450\n      }\n    }, __jsx(Header, {\n      as: \"h2\",\n      color: \"green\",\n      textAlign: \"center\"\n    }, \"Log-in to your account\"), __jsx(Form, {\n      size: \"large\",\n      onSubmit: e => handleSubmit(e, formType),\n      error: formError\n    }, __jsx(Segment, {\n      stacked: true\n    }, __jsx(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address, e.g. joe@schmoe.com\",\n      name: \"username\",\n      value: username,\n      onChange: handleChange\n    }), __jsx(Transition, {\n      visible: usernameError,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      content: usernameFeedback\n    })), __jsx(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: e => handleChange(e)\n    }), __jsx(Transition, {\n      visible: passwordError,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      content: passwordFeedback\n    })), __jsx(Button, {\n      color: \"green\",\n      fluid: true,\n      size: \"large\",\n      disabled: disableButton\n    }, \"Log-in\"), __jsx(\"br\", null), __jsx(Link, {\n      to: \"/forgot_password\"\n    }, \"Forgot password?\"), __jsx(Transition, {\n      visible: accountVerified === false,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      warning: true,\n      color: \"yellow\",\n      centered: \"true\",\n      header: responseMessage[0],\n      content: responseMessage[1]\n    })), __jsx(Transition, {\n      visible: formError,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      error: true,\n      centered: \"true\",\n      header: responseMessage[0],\n      content: responseMessage[1]\n    })), __jsx(Transition, {\n      visible: formSuccess,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      success: true,\n      header: responseMessage[0],\n      content: responseMessage[1]\n    })))), formError ? __jsx(Transition, {\n      visible: formError,\n      animation: \"scale\",\n      duration: 1000\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, null, __jsx(Link, {\n      to: \"/register\"\n    }, \"Register\"), ' ')) : null), ' '), ' ');\n  }\n\n  function isRegisterForm() {\n    return __jsx(\"div\", {\n      className: \"login-form\"\n    }, ' ', __jsx(\"style\", null, `body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`, ' '), __jsx(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100%'\n      },\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      style: {\n        maxWidth: 450\n      }\n    }, __jsx(Header, {\n      as: \"h2\",\n      color: \"green\",\n      textAlign: \"center\"\n    }, \"Register for an account\"), __jsx(Form, {\n      size: \"large\",\n      onSubmit: e => handleSubmit(e, formType),\n      error: userNameDup || formError\n    }, __jsx(Segment, {\n      stacked: true\n    }, __jsx(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address, e.g. joe@schmoe.com\",\n      name: \"username\",\n      value: username,\n      onChange: e => handleChange(e),\n      error: usernameError\n    }), __jsx(Transition, {\n      visible: usernameError,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      content: usernameFeedback\n    })), __jsx(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: e => handleChange(e),\n      error: passwordError\n    }), __jsx(Transition, {\n      visible: passwordError,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      content: passwordFeedback\n    })), __jsx(Button, {\n      color: \"green\",\n      fluid: true,\n      size: \"large\",\n      disabled: disableButton\n    }, \"Register\"), __jsx(Transition, {\n      visible: userNameDup || formError,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      error: true,\n      centered: \"true\",\n      header: responseMessage[0],\n      content: responseMessage[1]\n    })), __jsx(Transition, {\n      visible: formSuccess,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      success: true,\n      header: responseMessage[0],\n      content: responseMessage[1]\n    })))), formSuccess ? __jsx(Transition, {\n      visible: formSuccess,\n      animation: \"scale\",\n      duration: 1000\n    }, __jsx(Message, null, __jsx(Link, {\n      to: \"/login\"\n    }, \"Login\"), ' ')) : null), ' '), ' ');\n  }\n\n  function isUpdatePasswordForm() {\n    console.log('disableButton ', disableButton);\n    return __jsx(\"div\", {\n      className: \"login-form\"\n    }, ' ', __jsx(\"style\", null, `body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`, ' '), __jsx(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100%'\n      },\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      style: {\n        maxWidth: 450\n      }\n    }, __jsx(Header, {\n      as: \"h2\",\n      color: \"green\",\n      textAlign: \"center\"\n    }, \"Update your password\"), __jsx(Message, {\n      color: \"olive\"\n    }, \"Create a new password for your account and sign in. For your security, choose a password you haven't used before\"), __jsx(Form, {\n      size: \"large\",\n      onSubmit: e => handleSubmit(e, formType),\n      error: formError\n    }, __jsx(Segment, {\n      stacked: true\n    }, __jsx(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"New password, 6 - 16 characters\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: e => handleChange(e),\n      error: passwordError\n    }), __jsx(Transition, {\n      visible: passwordError,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      content: passwordFeedback\n    })), __jsx(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"Confirm new password\",\n      name: \"password_confirmation\",\n      type: \"password\",\n      value: password_confirmation,\n      onChange: e => handleChange(e),\n      error: passwordConfirmationError\n    }), __jsx(Transition, {\n      visible: passwordConfirmationError,\n      animation: \"scale\",\n      duration: duration\n    }, __jsx(Message, {\n      error: true,\n      content: passwordConfirmationFeedback\n    })), __jsx(Button, {\n      color: \"green\",\n      fluid: true,\n      size: \"large\",\n      disabled: disableButton\n    }, \"Update password\"), __jsx(Transition, {\n      visible: tokenExpired,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      error: true,\n      header: responseMessage[0]\n    })), __jsx(Transition, {\n      visible: tokenExpired,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Link, {\n      to: \"/forgot_password\"\n    }, \"reset password link?\")), __jsx(Transition, {\n      visible: responseCodeSuccess,\n      unmountOnHide: true,\n      animation: \"scale\",\n      duration: duration\n    }, isLoading ? __jsx(Dimmer, {\n      active: true,\n      inverted: true\n    }, __jsx(Loader, null)) : __jsx(Message, {\n      success: true,\n      header: responseMessage[0],\n      content: responseMessage[1]\n    }))))), ' '), ' ');\n  }\n\n  function forgotPasswordSubmit() {\n    axios.post('http://localhost:8016/users/forgot_password', {\n      username: username\n    }).then(response => {\n      if (response.status === 200) {\n        setUsername('');\n        setResponseMessage(response.data.msg);\n        setFormError(false);\n        setFormSuccess(true);\n        setIsLoading(false);\n      }\n    }).catch(function (error) {\n      console.log(error);\n\n      if (error.response) {\n        if (error.response.status === 404) {\n          setResponseMessage(error.response.data.msg);\n          setFormError(true);\n          setFormSuccess(false);\n          setIsLoading(false);\n        }\n\n        console.log('error.response.data', error.response.data);\n        console.log('error.response.headers', error.response.headers);\n      }\n    });\n  }\n\n  function loginSubmit() {\n    axios.post('http://localhost:8016/users/login', {\n      username: username,\n      password: password\n    }).then(response => {\n      console.log('response', response);\n\n      if (response.status === 200) {\n        setTimeout(() => {\n          logInUser();\n          history.push('/profile');\n        }, 5000);\n        setUsername('');\n        setPassword('');\n        setFormError(false);\n        setFormSuccess(true);\n        setIsLoading(false);\n        setResponseMessage(response.data.msg);\n        userHasBeenVerified();\n      }\n    }).catch(function (error) {\n      if (error.response) {\n        if (error.response.status === 401) {\n          userHasNotBeenVerified();\n          setUsername('');\n          setPassword('');\n          setFormError(false);\n          setFormSuccess(false);\n          setIsLoading(false);\n          setResponseMessage(error.response.data.msg);\n        }\n\n        if (error.response.status === 404) {\n          resetUserAcoountVerified();\n          setUsername('');\n          setPassword('');\n          setFormError(true);\n          setFormSuccess(false);\n          setIsLoading(false);\n          setResponseMessage(error.response.data.msg);\n        }\n\n        console.log('error.response.data', error.response.data);\n        console.log('error.response.headers', error.response.headers);\n      }\n    });\n  }\n\n  function registerSubmit() {\n    axios.post('http://localhost:8016/users/registration', {\n      username: username,\n      password: password\n    }).then(response => {\n      console.log('response', response);\n\n      if (response.status === 200) {\n        setTimeout(() => {\n          history.push('/login');\n        }, 5000);\n        setUsername('');\n        setPassword('');\n        setResponseMessage(response.data.msg);\n        setUserNameDup(false);\n        setFormError(false);\n        setFormSuccess(true);\n        setIsLoading(false);\n      }\n    }).catch(function (error) {\n      console.log('error ', error);\n\n      if (error.response.status === 409) {\n        setUserNameDup(true);\n        setResponseMessage(error.response.data.msg);\n        setFormError(true);\n        setIsLoading(false);\n        console.log('userNameDup in error ', userNameDup);\n        console.log('formError in error', formError);\n        console.log('Error in registration', error);\n      }\n    });\n  }\n\n  function updatePasswordSubmit() {\n    var {\n      token\n    } = match.params;\n    axios.post(`http://localhost:8016/users/reset_password/${token}`, {\n      password: password\n    }).then(response => {\n      console.log('response', response);\n\n      if (response.status === 200) {\n        setPassword('');\n        setPasswordConfirmation('');\n        setFormError(false);\n        setFormSuccess(true);\n        setIsLoading(false);\n        setResponseCodeSuccess(true);\n        setResponseMessage(response.data.msg);\n      }\n    }).catch(function (error) {\n      console.log(error);\n\n      if (error.response) {\n        if (error.response.status === 401) {\n          setFormError(true);\n          setFormSuccess(false);\n          setIsLoading(false);\n          setTokenExpired(true);\n          setResponseMessage(error.response.data.msg);\n        }\n      }\n    });\n  }\n\n  var isGenericUseEffect = useEffect(() => {\n    validateInputs(formType, username, setUsernameError, setUsernameFeedback, password, password_confirmation, setPasswordConfirmationError, setPasswordConfirmationFeedback, setPasswordError, setPasswordFeedback, setDisableButton);\n  }, [formType, accountVerified, username, password, usernameError, passwordError]);\n\n  function handleChange(e) {\n    console.log('e ', e);\n    e.persist();\n    setFormError(false);\n    setDisableButton(true);\n    console.log('resetUserAcoountVerified fired!');\n    resetUserAcoountVerified();\n    console.log('resetUserAcoountVerified fired!');\n    setUserNameDup(false);\n\n    if (e.target.name === 'username') {\n      console.log('username', e.target.name);\n      setUsername(e.target.value);\n    }\n\n    if (e.target.name === 'password') {\n      console.log('password', e.target.name);\n      setPassword(e.target.value);\n    }\n\n    if (e.target.name === 'password_confirmation') {\n      console.log('password_confirmation', e.target.name);\n      setPasswordConfirmation(e.target.value);\n    }\n  }\n\n  function handleSubmit(event, formType) {\n    event.preventDefault();\n    return Forms[formType][1]();\n  }\n\n  return Forms[formType][0]();\n}\n\nfunction mapStateToProps(state) {\n  const {\n    users\n  } = state;\n  const {\n    accountVerified,\n    isLoggedIn\n  } = users;\n  return {\n    accountVerified,\n    isLoggedIn\n  };\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  logInUser,\n  userHasBeenVerified,\n  userHasNotBeenVerified,\n  resetUserAcoountVerified\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormComponent);","map":{"version":3,"sources":["/Users/antonio-pavicevac-ortiz/Dropbox/developer_folder/hillfinder/components/FormComponent/FormComponent.jsx"],"names":["React","useState","useEffect","useCallback","Loader","Dimmer","Transition","Button","Form","Grid","Header","Message","Segment","axios","logInUser","userHasBeenVerified","userHasNotBeenVerified","resetUserAcoountVerified","Link","validateInputs","connect","bindActionCreators","FormComponent","formType","match","history","accountVerified","Forms","Confirmation","isConfirmationForm","ForgotPassword","isForgotPasswordForm","forgotPasswordSubmit","isGenericUseEffect","Login","isLoginForm","loginSubmit","Registration","isRegisterForm","registerSubmit","UpdatePassword","isUpdatePasswordForm","updatePasswordSubmit","duration","setDuration","username","setUsername","usernameFeedback","setUsernameFeedback","usernameError","setUsernameError","userNameDup","setUserNameDup","password","setPassword","passwordFeedback","setPasswordFeedback","passwordError","setPasswordError","password_confirmation","setPasswordConfirmation","passwordConfirmationError","setPasswordConfirmationError","passwordConfirmationFeedback","setPasswordConfirmationFeedback","formSuccess","setFormSuccess","formError","setFormError","disableButton","setDisableButton","isLoading","setIsLoading","responseMessage","setResponseMessage","tokenExpired","setTokenExpired","responseCodeSuccess","setResponseCodeSuccess","error","setError","get","params","token","then","response","status","data","msg","catch","isNull","value","height","maxWidth","e","handleSubmit","handleChange","console","log","post","headers","setTimeout","push","persist","target","name","event","preventDefault","mapStateToProps","state","users","isLoggedIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport {\n  Loader,\n  Dimmer,\n  Transition,\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment\n} from 'semantic-ui-react';\n\nimport axios from 'axios';\n\nimport {\n  logInUser,\n  userHasBeenVerified,\n  userHasNotBeenVerified,\n  resetUserAcoountVerified\n} from '../../store/reducers/users/index';\n\nimport { Link } from 'react-router-dom';\nimport { validateInputs } from '../../utils/index';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nfunction FormComponent({\n  formType,\n  match,\n  history,\n  logInUser,\n  accountVerified,\n  userHasBeenVerified,\n  userHasNotBeenVerified,\n  resetUserAcoountVerified\n}) {\n  var Forms = {\n    Confirmation: [isConfirmationForm],\n    ForgotPassword: [isForgotPasswordForm, forgotPasswordSubmit, isGenericUseEffect],\n    Login: [isLoginForm, loginSubmit, isGenericUseEffect],\n    Registration: [isRegisterForm, registerSubmit, isGenericUseEffect],\n    UpdatePassword: [isUpdatePasswordForm, updatePasswordSubmit, isGenericUseEffect]\n  };\n\n  var [duration, setDuration] = useState(500);\n  var [username, setUsername] = useState('');\n  var [usernameFeedback, setUsernameFeedback] = useState('');\n  var [usernameError, setUsernameError] = useState(false);\n  var [userNameDup, setUserNameDup] = useState(false);\n  var [password, setPassword] = useState('');\n  var [passwordFeedback, setPasswordFeedback] = useState('');\n  var [passwordError, setPasswordError] = useState(false);\n  var [password_confirmation, setPasswordConfirmation] = useState('');\n  var [passwordConfirmationError, setPasswordConfirmationError] = useState(false);\n  var [passwordConfirmationFeedback, setPasswordConfirmationFeedback] = useState('');\n  var [formSuccess, setFormSuccess] = useState(false);\n  var [formError, setFormError] = useState(false);\n  var [disableButton, setDisableButton] = useState(true);\n  var [isLoading, setIsLoading] = useState(false);\n  var [responseMessage, setResponseMessage] = useState({});\n  var [tokenExpired, setTokenExpired] = useState(false);\n  var [responseCodeSuccess, setResponseCodeSuccess] = useState(false);\n  var [error, setError] = useState(false);\n\n  function isConfirmationForm() {\n    useEffect(() => {\n      axios\n        .get(`http://localhost:8016/users/confirmation/${match.params.token}`)\n        .then(response => {\n          if (response.status === 200) {\n            setError(false);\n            setResponseMessage(response.data.msg);\n            // setTimeout(() => {\n            //   userHasBeenVerified();\n            // }, 1000);\n          }\n        })\n        .catch(function(error) {\n          if (error.response.status === 404) {\n            // Token not in database\n            resetUserAcoountVerified();\n            setResponseMessage(error.response.data.msg);\n            setError(true);\n          }\n          if (error.response.status === 400) {\n            userHasBeenVerified();\n            setResponseMessage(error.response.data.msg);\n            setError(true);\n          }\n        });\n    }, []);\n\n    const isNull = value => typeof value === 'object' && !value;\n    return (\n      <div className=\"login-form\">\n        {error === false ? (\n          <Transition unmountOnHide={true} animation=\"scale\" duration={duration}>\n            <Message success header={responseMessage[0]} />\n          </Transition>\n        ) : (\n          ''\n        )}\n\n        {accountVerified === true && error === true ? (\n          <Transition unmountOnHide={true} animation=\"scale\" duration={duration}>\n            <Message error header={responseMessage[0]} />\n          </Transition>\n        ) : (\n          ''\n        )}\n        {isNull(accountVerified) && error === true ? (\n          <Transition unmountOnHide={true} animation=\"scale\" duration={duration}>\n            <Message error header={responseMessage[0]} />\n          </Transition>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n\n  function isForgotPasswordForm() {\n    return (\n      <div className=\"login-form\">\n        {' '}\n        {}\n        <style>\n          {`body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`}{' '}\n        </style>\n        <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"green\" textAlign=\"center\">\n              Forgot yee password?\n            </Header>\n            <Message color=\"olive\">\n              Not a problem. Just enter your email address below. If it's registered with\n              Hillfinder, we'll send you a link to reset your password.{' '}\n            </Message>\n\n            <Form\n              size=\"large\"\n              onSubmit={e => handleSubmit(e, formType)}\n              error={formError}\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address, e.g. joe@schmoe.com\"\n                  name=\"username\"\n                  value={username}\n                  onChange={e => handleChange(e)}\n                  error={usernameError}\n                />\n\n                <Transition visible={usernameError} animation=\"scale\" duration={duration}>\n                  <Message error content={usernameFeedback} />\n                </Transition>\n\n                <Button color=\"green\" fluid size=\"large\" disabled={disableButton}>\n                  Yes, send a link\n                </Button>\n\n                <Transition\n                  visible={formError}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      error\n                      centered=\"true\"\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={formSuccess}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      success\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n              </Segment>\n            </Form>\n\n            {formError ? (\n              <Transition visible={formError} animation=\"scale\" duration={1000}>\n                <Message>\n                  <Link to=\"/register\">Register</Link>{' '}\n                </Message>\n              </Transition>\n            ) : null}\n          </Grid.Column>{' '}\n        </Grid>{' '}\n      </div>\n    );\n  }\n\n  function isLoginForm() {\n    return (\n      <div className=\"login-form\">\n        {' '}\n        {}\n        <style>\n          {`body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`}{' '}\n        </style>\n        <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"green\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n\n            <Form\n              size=\"large\"\n              onSubmit={e => handleSubmit(e, formType)}\n              error={formError}\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address, e.g. joe@schmoe.com\"\n                  name=\"username\"\n                  value={username}\n                  onChange={handleChange}\n                />\n                <Transition visible={usernameError} animation=\"scale\" duration={duration}>\n                  <Message error content={usernameFeedback} />\n                </Transition>\n                <Form.Input\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={e => handleChange(e)}\n                />\n                <Transition visible={passwordError} animation=\"scale\" duration={duration}>\n                  <Message error content={passwordFeedback} />\n                </Transition>\n                <Button color=\"green\" fluid size=\"large\" disabled={disableButton}>\n                  Log-in\n                </Button>\n                <br />\n                <Link to=\"/forgot_password\">Forgot password?</Link>\n\n                <Transition\n                  visible={accountVerified === false}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      warning\n                      color=\"yellow\"\n                      centered=\"true\"\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={formError}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      error\n                      centered=\"true\"\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={formSuccess}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      success\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n              </Segment>\n            </Form>\n            {formError ? (\n              <Transition visible={formError} animation=\"scale\" duration={1000}>\n                {isLoading ? (\n                  <Dimmer active inverted>\n                    <Loader />\n                  </Dimmer>\n                ) : (\n                  <Message>\n                    <Link to=\"/register\">Register</Link>{' '}\n                  </Message>\n                )}\n              </Transition>\n            ) : null}\n          </Grid.Column>{' '}\n        </Grid>{' '}\n      </div>\n    );\n  }\n\n  function isRegisterForm() {\n    return (\n      <div className=\"login-form\">\n        {' '}\n        {}\n        <style>\n          {`body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`}{' '}\n        </style>\n        <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"green\" textAlign=\"center\">\n              Register for an account\n              {/* {isLoggedIn ? `Register for an account` : ` Log-in to your account`} */}\n            </Header>\n\n            <Form\n              size=\"large\"\n              onSubmit={e => handleSubmit(e, formType)}\n              error={userNameDup || formError}\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address, e.g. joe@schmoe.com\"\n                  name=\"username\"\n                  value={username}\n                  onChange={e => handleChange(e)}\n                  error={usernameError}\n                />\n\n                <Transition visible={usernameError} animation=\"scale\" duration={duration}>\n                  <Message error content={usernameFeedback} />\n                </Transition>\n\n                <Form.Input\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={e => handleChange(e)}\n                  error={passwordError}\n                />\n\n                <Transition visible={passwordError} animation=\"scale\" duration={duration}>\n                  <Message error content={passwordFeedback} />\n                </Transition>\n\n                <Button color=\"green\" fluid size=\"large\" disabled={disableButton}>\n                  Register\n                </Button>\n\n                <Transition\n                  visible={userNameDup || formError}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      error\n                      centered=\"true\"\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={formSuccess}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      success\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n              </Segment>\n            </Form>\n\n            {formSuccess ? (\n              <Transition visible={formSuccess} animation=\"scale\" duration={1000}>\n                <Message>\n                  <Link to=\"/login\">Login</Link>{' '}\n                </Message>\n              </Transition>\n            ) : null}\n          </Grid.Column>{' '}\n        </Grid>{' '}\n      </div>\n    );\n  }\n\n  function isUpdatePasswordForm() {\n    console.log('disableButton ', disableButton);\n    return (\n      <div className=\"login-form\">\n        {' '}\n        {}\n        <style>\n          {`body > div, body > div > div, body > div > div > div.login-form { height: 100%;}`}{' '}\n        </style>\n        <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"green\" textAlign=\"center\">\n              Update your password\n            </Header>\n            <Message color=\"olive\">\n              Create a new password for your account and sign in. For your security,\n              choose a password you haven't used before\n            </Message>\n\n            <Form\n              size=\"large\"\n              onSubmit={e => handleSubmit(e, formType)}\n              error={formError}\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"New password, 6 - 16 characters\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={e => handleChange(e)}\n                  error={passwordError}\n                />\n                <Transition visible={passwordError} animation=\"scale\" duration={duration}>\n                  <Message error content={passwordFeedback} />\n                </Transition>\n\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Confirm new password\"\n                  name=\"password_confirmation\"\n                  type=\"password\"\n                  value={password_confirmation}\n                  onChange={e => handleChange(e)}\n                  error={passwordConfirmationError}\n                />\n\n                <Transition\n                  visible={passwordConfirmationError}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  <Message error content={passwordConfirmationFeedback} />\n                </Transition>\n\n                <Button color=\"green\" fluid size=\"large\" disabled={disableButton}>\n                  Update password\n                </Button>\n\n                <Transition\n                  visible={tokenExpired}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message error header={responseMessage[0]} />\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={tokenExpired}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Link to=\"/forgot_password\">reset password link?</Link>\n                  )}\n                </Transition>\n\n                <Transition\n                  visible={responseCodeSuccess}\n                  unmountOnHide={true}\n                  animation=\"scale\"\n                  duration={duration}\n                >\n                  {isLoading ? (\n                    <Dimmer active inverted>\n                      <Loader />\n                    </Dimmer>\n                  ) : (\n                    <Message\n                      success\n                      header={responseMessage[0]}\n                      content={responseMessage[1]}\n                    />\n                  )}\n                </Transition>\n              </Segment>\n            </Form>\n          </Grid.Column>{' '}\n        </Grid>{' '}\n      </div>\n    );\n  }\n\n  function forgotPasswordSubmit() {\n    axios\n      .post('http://localhost:8016/users/forgot_password', {\n        username: username\n      })\n      .then(response => {\n        if (response.status === 200) {\n          setUsername('');\n          setResponseMessage(response.data.msg);\n          setFormError(false);\n          setFormSuccess(true);\n          setIsLoading(false);\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n        if (error.response) {\n          if (error.response.status === 404) {\n            setResponseMessage(error.response.data.msg);\n            setFormError(true);\n            setFormSuccess(false);\n            setIsLoading(false);\n          }\n\n          console.log('error.response.data', error.response.data);\n          console.log('error.response.headers', error.response.headers);\n        }\n      });\n  }\n\n  function loginSubmit() {\n    axios\n      .post('http://localhost:8016/users/login', {\n        username: username,\n        password: password\n      })\n      .then(response => {\n        console.log('response', response);\n        if (response.status === 200) {\n          setTimeout(() => {\n            logInUser();\n            history.push('/profile');\n          }, 5000);\n\n          setUsername('');\n          setPassword('');\n          setFormError(false);\n          setFormSuccess(true);\n          setIsLoading(false);\n          setResponseMessage(response.data.msg);\n          userHasBeenVerified();\n        }\n      })\n      .catch(function(error) {\n        if (error.response) {\n          if (error.response.status === 401) {\n            userHasNotBeenVerified();\n            setUsername('');\n            setPassword('');\n            setFormError(false);\n            setFormSuccess(false);\n            setIsLoading(false);\n            setResponseMessage(error.response.data.msg);\n          }\n          if (error.response.status === 404) {\n            resetUserAcoountVerified();\n            setUsername('');\n            setPassword('');\n            setFormError(true);\n            setFormSuccess(false);\n            setIsLoading(false);\n            setResponseMessage(error.response.data.msg);\n          }\n          console.log('error.response.data', error.response.data);\n          console.log('error.response.headers', error.response.headers);\n        }\n      });\n  }\n\n  function registerSubmit() {\n    axios\n      .post('http://localhost:8016/users/registration', {\n        username: username,\n        password: password\n      })\n      .then(response => {\n        console.log('response', response);\n        if (response.status === 200) {\n          setTimeout(() => {\n            history.push('/login');\n          }, 5000);\n          setUsername('');\n          setPassword('');\n          setResponseMessage(response.data.msg);\n          setUserNameDup(false);\n          setFormError(false);\n          setFormSuccess(true);\n          setIsLoading(false);\n        }\n      })\n      .catch(function(error) {\n        console.log('error ', error);\n        if (error.response.status === 409) {\n          setUserNameDup(true);\n          setResponseMessage(error.response.data.msg);\n\n          setFormError(true);\n          setIsLoading(false);\n\n          console.log('userNameDup in error ', userNameDup);\n          console.log('formError in error', formError);\n          console.log('Error in registration', error);\n        }\n      });\n  }\n\n  function updatePasswordSubmit() {\n    var { token } = match.params;\n    axios\n      .post(`http://localhost:8016/users/reset_password/${token}`, {\n        password: password\n      })\n      .then(response => {\n        console.log('response', response);\n        if (response.status === 200) {\n          setPassword('');\n          setPasswordConfirmation('');\n          setFormError(false);\n          setFormSuccess(true);\n          setIsLoading(false);\n          setResponseCodeSuccess(true);\n          setResponseMessage(response.data.msg);\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            setFormError(true);\n            setFormSuccess(false);\n            setIsLoading(false);\n            setTokenExpired(true);\n            setResponseMessage(error.response.data.msg);\n          }\n        }\n      });\n  }\n\n  var isGenericUseEffect = useEffect(() => {\n    validateInputs(\n      formType,\n      username,\n      setUsernameError,\n      setUsernameFeedback,\n      password,\n      password_confirmation,\n      setPasswordConfirmationError,\n      setPasswordConfirmationFeedback,\n      setPasswordError,\n      setPasswordFeedback,\n      setDisableButton\n    );\n  }, [formType, accountVerified, username, password, usernameError, passwordError]);\n\n  function handleChange(e) {\n    console.log('e ', e);\n    e.persist();\n    setFormError(false);\n    setDisableButton(true);\n    console.log('resetUserAcoountVerified fired!');\n    resetUserAcoountVerified();\n    console.log('resetUserAcoountVerified fired!');\n    setUserNameDup(false);\n\n    if (e.target.name === 'username') {\n      console.log('username', e.target.name);\n      setUsername(e.target.value);\n    }\n\n    if (e.target.name === 'password') {\n      console.log('password', e.target.name);\n      setPassword(e.target.value);\n    }\n\n    if (e.target.name === 'password_confirmation') {\n      console.log('password_confirmation', e.target.name);\n      setPasswordConfirmation(e.target.value);\n    }\n  }\n\n  function handleSubmit(event, formType) {\n    event.preventDefault();\n    return Forms[formType][1]();\n  }\n  return Forms[formType][0]();\n}\n\nfunction mapStateToProps(state) {\n  const { users } = state;\n  const { accountVerified, isLoggedIn } = users;\n\n  return { accountVerified, isLoggedIn };\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    { logInUser, userHasBeenVerified, userHasNotBeenVerified, resetUserAcoountVerified },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormComponent);\n"]},"metadata":{},"sourceType":"module"}