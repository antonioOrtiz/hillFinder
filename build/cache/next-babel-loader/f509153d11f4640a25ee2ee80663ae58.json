{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createRef } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport Modal from '../components/Modal/MyModal.jsx';\nimport { Container, Menu, Responsive, Segment, Visibility, Sidebar, Icon, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { modalStateOn, modalStateOff } from '../store/reducers/ui/index';\nimport { loadAvatar } from '../store/reducers/users/index';\n\nconst getWidth = () => {\n  const isSSR = true;\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nconst logOutMenuItemHelper = (isMobile, isLoggedIn, history, modalActive, nav, NavLink, modalStateOn, modalStateOff, handleSidebarHide) => {\n  function mobilelogOutMenuItemHelper(history, modalActive, nav, NavLink, modalStateOn, handleSidebarHide) {\n    if (nav.name === 'Log in') {\n      console.log('mobile nav.name ', nav.name);\n      return __jsx(React.Fragment, {\n        key: 'modalForMobile'\n      }, modalActive && __jsx(Modal, {\n        isAlertModal: false,\n        history: history,\n        affirmativeUsed: \"Yes\",\n        message: \" Are you sure you want to log out of your account?\",\n        modalActive: modalActive\n      }), __jsx(Menu.Item, {\n        key: 'modalForMobile',\n        name: \"Log out\",\n        onClick: event => {\n          modalStateOn();\n          handleSidebarHide();\n        }\n      }, \"Log Out\"));\n    } else {\n      return __jsx(Menu.Item, {\n        exact: true,\n        key: nav.name,\n        as: NavLink,\n        to: nav.path,\n        name: nav.name,\n        onClick: () => {\n          handleSidebarHide();\n        }\n      });\n    }\n  }\n\n  function desktoplogOutMenuItemHelper(history, modalActive, nav, NavLink, modalStateOn, modalStateOff) {\n    if (nav.name === 'Log in') {\n      return __jsx(React.Fragment, {\n        key: 'modalForDesktop'\n      }, modalActive && __jsx(Modal, {\n        isAlertModal: false,\n        history: history,\n        affirmativeUsed: \"Yes\",\n        message: \"Are you sure you want to log out of your account?\",\n        modalActive: modalActive\n      }), __jsx(Menu.Item, {\n        key: 'modalForDesktop',\n        name: \"Log out\",\n        onClick: event => {\n          modalStateOn();\n        }\n      }, \"Log Out\"));\n    } else {\n      return __jsx(Menu.Item, {\n        exact: true,\n        key: nav.name,\n        as: NavLink,\n        to: nav.path,\n        name: nav.name\n      });\n    }\n  }\n\n  if (isMobile && isLoggedIn) {\n    return mobilelogOutMenuItemHelper(history, modalActive, nav, NavLink, modalStateOn, modalStateOff, handleSidebarHide);\n  }\n\n  return desktoplogOutMenuItemHelper(history, modalActive, nav, NavLink, modalStateOn, modalStateOff);\n};\n\nclass DesktopContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"hideFixedMenu\", () => this.setState({\n      fixed: false\n    }));\n\n    _defineProperty(this, \"showFixedMenu\", () => this.setState({\n      fixed: true\n    }));\n  }\n\n  render() {\n    const {\n      fixed\n    } = this.state;\n    const {\n      history,\n      data,\n      children,\n      isLoggedIn,\n      modalActive,\n      modalStateOn,\n      modalStateOff\n    } = this.props; // console.log(\"this.props desktop in LinkNAV \", this.props);\n\n    return __jsx(Responsive, {\n      getWidth: getWidth,\n      minWidth: Responsive.onlyTablet.minWidth\n    }, __jsx(Visibility, {\n      once: false,\n      onBottomPassed: this.showFixedMenu,\n      onBottomPassedReverse: this.hideFixedMenu\n    }, __jsx(Segment, {\n      inverted: true,\n      textAlign: \"center\",\n      style: {\n        minHeight: 'auto',\n        padding: '0'\n      },\n      vertical: true\n    }, __jsx(Menu, {\n      fixed: fixed ? 'top' : null,\n      inverted: !fixed,\n      pointing: !fixed,\n      secondary: !fixed,\n      size: \"large\"\n    }, isLoggedIn ? data.filter(function (nav) {\n      return nav.name !== 'Register';\n    }).map(nav => {\n      return logOutMenuItemHelper(false, isLoggedIn, history, modalActive, nav, NavLink, modalStateOn, modalStateOff);\n    }) : data.filter(function (nav) {\n      return nav.name != 'Profile' && nav.name != 'Dashboard';\n    }).map(nav => {\n      return __jsx(Menu.Item, {\n        exact: true,\n        key: nav.path,\n        as: NavLink,\n        to: nav.path,\n        name: nav.name\n      });\n    })))), children);\n  }\n\n}\n\nclass MobileContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"handleSidebarHide\", () => this.setState({\n      sidebarOpened: false\n    }));\n\n    _defineProperty(this, \"handleToggle\", () => this.setState({\n      sidebarOpened: true\n    }));\n  }\n\n  render() {\n    const {\n      children,\n      history,\n      data,\n      isLoggedIn,\n      modalActive,\n      modalStateOn,\n      modalStateOff\n    } = this.props;\n    const {\n      sidebarOpened\n    } = this.state;\n    return __jsx(Responsive, {\n      as: Sidebar.Pushable,\n      getWidth: getWidth,\n      maxWidth: Responsive.onlyMobile.maxWidth\n    }, __jsx(Sidebar, {\n      as: Menu,\n      animation: \"push\",\n      inverted: true,\n      onHide: this.handleSidebarHide,\n      vertical: true,\n      visible: sidebarOpened\n    }, isLoggedIn ? data.filter(function (nav) {\n      return nav.name !== 'Register';\n    }).map(nav => {\n      return logOutMenuItemHelper(false, isLoggedIn, history, modalActive, nav, NavLink, modalStateOn, modalStateOff, this.handleSidebarHide);\n    }) : data.filter(function (nav) {\n      return nav.name != 'Profile' && nav.name != 'Dashboard';\n    }).map(nav => {\n      return __jsx(Menu.Item, {\n        exact: true,\n        key: nav.name,\n        as: NavLink,\n        to: nav.path,\n        name: nav.name,\n        onClick: this.handleSidebarHide\n      });\n    })), __jsx(Sidebar.Pusher, {\n      dimmed: sidebarOpened\n    }, __jsx(Segment, {\n      inverted: true,\n      textAlign: \"center\",\n      style: {\n        minHeight: 'auto',\n        padding: '1em 0em'\n      },\n      vertical: true\n    }, __jsx(Container, null, __jsx(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      size: \"large\"\n    }, __jsx(Menu.Item, {\n      onClick: this.handleToggle\n    }, __jsx(Icon, {\n      name: \"sidebar\"\n    })), __jsx(Menu.Item, {\n      position: \"right\"\n    }, __jsx(Button, {\n      inverted: true\n    }, isLoggedIn ? __jsx(Link, {\n      to: \"/\"\n    }, \"Log out\") : __jsx(Link, {\n      to: \"/login\"\n    }, \"Log in\")), !isLoggedIn ? __jsx(Button, {\n      inverted: true,\n      style: {\n        marginLeft: '0.5em'\n      }\n    }, __jsx(Link, {\n      to: \"/register\"\n    }, __jsx(\"span\", null, \"Register!\"))) : null)))), children));\n  }\n\n}\n\nconst LinkNavWithLayout = ({\n  children,\n  history,\n  data,\n  userAvatar,\n  modalActive,\n  modalStateOn,\n  modalStateOff,\n  isLoggedIn\n}) => __jsx(React.Fragment, null, __jsx(DesktopContainer, {\n  history: history,\n  data: data,\n  userAvatar: userAvatar,\n  modalActive: modalActive,\n  modalStateOn: modalStateOn,\n  modalStateOff: modalStateOff,\n  isLoggedIn: isLoggedIn\n}, children), __jsx(MobileContainer, {\n  history: history,\n  data: data,\n  userAvatar: userAvatar,\n  modalActive: modalActive,\n  modalStateOn: modalStateOn,\n  modalStateOff: modalStateOff,\n  isLoggedIn: isLoggedIn\n}, children));\n\nfunction mapStateToProps(state) {\n  const {\n    ui,\n    users\n  } = state;\n  const {\n    isLoggedIn,\n    userAvatar\n  } = users;\n  const {\n    modalActive\n  } = ui;\n  return {\n    isLoggedIn,\n    userAvatar,\n    modalActive\n  };\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  modalStateOn,\n  modalStateOff,\n  loadAvatar\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkNavWithLayout);","map":{"version":3,"sources":["/Users/antonio-pavicevac-ortiz/Dropbox/developer_folder/hillfinder/pages/LinkNavWithLayout.jsx"],"names":["React","Component","createRef","Link","NavLink","Modal","Container","Menu","Responsive","Segment","Visibility","Sidebar","Icon","Button","connect","bindActionCreators","modalStateOn","modalStateOff","loadAvatar","getWidth","isSSR","onlyTablet","minWidth","window","innerWidth","logOutMenuItemHelper","isMobile","isLoggedIn","history","modalActive","nav","handleSidebarHide","mobilelogOutMenuItemHelper","name","console","log","event","path","desktoplogOutMenuItemHelper","DesktopContainer","setState","fixed","render","state","data","children","props","showFixedMenu","hideFixedMenu","minHeight","padding","filter","map","MobileContainer","sidebarOpened","Pushable","onlyMobile","maxWidth","handleToggle","marginLeft","LinkNavWithLayout","userAvatar","mapStateToProps","ui","users","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport Modal from '../components/Modal/MyModal.jsx';\nimport {\n  Container,\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  Sidebar,\n  Icon,\n  Button\n} from 'semantic-ui-react';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { modalStateOn, modalStateOff } from '../store/reducers/ui/index';\nimport { loadAvatar } from '../store/reducers/users/index';\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined';\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nconst logOutMenuItemHelper = (\n  isMobile,\n  isLoggedIn,\n  history,\n  modalActive,\n  nav,\n  NavLink,\n  modalStateOn,\n  modalStateOff,\n  handleSidebarHide\n) => {\n  function mobilelogOutMenuItemHelper(\n    history,\n    modalActive,\n    nav,\n    NavLink,\n    modalStateOn,\n    handleSidebarHide\n  ) {\n    if (nav.name === 'Log in') {\n      console.log('mobile nav.name ', nav.name);\n\n      return (\n        <React.Fragment key={'modalForMobile'}>\n          {modalActive && (\n            <Modal\n              isAlertModal={false}\n              history={history}\n              affirmativeUsed=\"Yes\"\n              message=\" Are you sure you want to log out of your account?\"\n              modalActive={modalActive}\n            />\n          )}\n          <Menu.Item\n            key={'modalForMobile'}\n            name=\"Log out\"\n            onClick={event => {\n              modalStateOn();\n              handleSidebarHide();\n            }}\n          >\n            Log Out\n          </Menu.Item>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <Menu.Item\n          exact\n          key={nav.name}\n          as={NavLink}\n          to={nav.path}\n          name={nav.name}\n          onClick={() => {\n            handleSidebarHide();\n          }}\n        />\n      );\n    }\n  }\n\n  function desktoplogOutMenuItemHelper(\n    history,\n    modalActive,\n    nav,\n    NavLink,\n    modalStateOn,\n    modalStateOff\n  ) {\n    if (nav.name === 'Log in') {\n      return (\n        <React.Fragment key={'modalForDesktop'}>\n          {modalActive && (\n            <Modal\n              isAlertModal={false}\n              history={history}\n              affirmativeUsed=\"Yes\"\n              message=\"Are you sure you want to log out of your account?\"\n              modalActive={modalActive}\n            />\n          )}\n          <Menu.Item\n            key={'modalForDesktop'}\n            name=\"Log out\"\n            onClick={event => {\n              modalStateOn();\n            }}\n          >\n            Log Out\n          </Menu.Item>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <Menu.Item exact key={nav.name} as={NavLink} to={nav.path} name={nav.name} />\n      );\n    }\n  }\n\n  if (isMobile && isLoggedIn) {\n    return mobilelogOutMenuItemHelper(\n      history,\n      modalActive,\n      nav,\n      NavLink,\n      modalStateOn,\n      modalStateOff,\n      handleSidebarHide\n    );\n  }\n  return desktoplogOutMenuItemHelper(\n    history,\n    modalActive,\n    nav,\n    NavLink,\n    modalStateOn,\n    modalStateOff\n  );\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n\n  render() {\n    const { fixed } = this.state;\n    const {\n      history,\n      data,\n      children,\n      isLoggedIn,\n      modalActive,\n      modalStateOn,\n      modalStateOff\n    } = this.props;\n    // console.log(\"this.props desktop in LinkNAV \", this.props);\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 'auto', padding: '0' }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? 'top' : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size=\"large\"\n            >\n              {/* {console.log(\"isLoggedIn in desktop homecomponent \", isLoggedIn)} */}\n              {isLoggedIn\n                ? data\n                    .filter(function(nav) {\n                      return nav.name !== 'Register';\n                    })\n                    .map(nav => {\n                      return logOutMenuItemHelper(\n                        false,\n                        isLoggedIn,\n                        history,\n                        modalActive,\n                        nav,\n                        NavLink,\n                        modalStateOn,\n                        modalStateOff\n                      );\n                    })\n                : data\n                    .filter(function(nav) {\n                      return nav.name != 'Profile' && nav.name != 'Dashboard';\n                    })\n                    .map(nav => {\n                      return (\n                        <Menu.Item\n                          exact\n                          key={nav.path}\n                          as={NavLink}\n                          to={nav.path}\n                          name={nav.name}\n                        />\n                      );\n                    })}\n            </Menu>\n          </Segment>\n        </Visibility>\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const {\n      children,\n      history,\n      data,\n      isLoggedIn,\n      modalActive,\n      modalStateOn,\n      modalStateOff\n    } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          inverted\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          {isLoggedIn\n            ? data\n                .filter(function(nav) {\n                  return nav.name !== 'Register';\n                })\n                .map(nav => {\n                  return logOutMenuItemHelper(\n                    false,\n                    isLoggedIn,\n                    history,\n                    modalActive,\n                    nav,\n                    NavLink,\n                    modalStateOn,\n                    modalStateOff,\n                    this.handleSidebarHide\n                  );\n                })\n            : data\n                .filter(function(nav) {\n                  return nav.name != 'Profile' && nav.name != 'Dashboard';\n                })\n                .map(nav => {\n                  return (\n                    <Menu.Item\n                      exact\n                      key={nav.name}\n                      as={NavLink}\n                      to={nav.path}\n                      name={nav.name}\n                      onClick={this.handleSidebarHide}\n                    />\n                  );\n                })}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 'auto', padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n                <Menu.Item position=\"right\">\n                  <Button inverted>\n                    {isLoggedIn ? (\n                      <Link to=\"/\">Log out</Link>\n                    ) : (\n                      <Link to=\"/login\">Log in</Link>\n                    )}\n                  </Button>\n                  {!isLoggedIn ? (\n                    <Button inverted style={{ marginLeft: '0.5em' }}>\n                      <Link to=\"/register\">\n                        <span>Register!</span>\n                      </Link>\n                    </Button>\n                  ) : null}\n                </Menu.Item>\n              </Menu>\n            </Container>\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nconst LinkNavWithLayout = ({\n  children,\n  history,\n  data,\n  userAvatar,\n  modalActive,\n  modalStateOn,\n  modalStateOff,\n  isLoggedIn\n}) => (\n  <React.Fragment>\n    <DesktopContainer\n      history={history}\n      data={data}\n      userAvatar={userAvatar}\n      modalActive={modalActive}\n      modalStateOn={modalStateOn}\n      modalStateOff={modalStateOff}\n      isLoggedIn={isLoggedIn}\n    >\n      {children}\n    </DesktopContainer>\n    <MobileContainer\n      history={history}\n      data={data}\n      userAvatar={userAvatar}\n      modalActive={modalActive}\n      modalStateOn={modalStateOn}\n      modalStateOff={modalStateOff}\n      isLoggedIn={isLoggedIn}\n    >\n      {children}\n    </MobileContainer>\n  </React.Fragment>\n);\n\nfunction mapStateToProps(state) {\n  const { ui, users } = state;\n  const { isLoggedIn, userAvatar } = users;\n  const { modalActive } = ui;\n\n  return { isLoggedIn, userAvatar, modalActive };\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ modalStateOn, modalStateOff, loadAvatar }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LinkNavWithLayout);\n"]},"metadata":{},"sourceType":"module"}